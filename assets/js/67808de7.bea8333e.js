"use strict";(self.webpackChunkpolyproto_docs=self.webpackChunkpolyproto_docs||[]).push([[2582],{6273:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>a,frontMatter:()=>r,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"protocols/chat","title":"polyproto-chat HTTP API Specification","description":"Namespace: chat","source":"@site/docs/protocols/chat.md","sourceDirName":"protocols","slug":"/protocols/chat","permalink":"/docs/protocols/chat","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"p2 extension: polyproto-auth","permalink":"/docs/protocols/auth"},"next":{"title":"How and what to contribute","permalink":"/docs/contribute"}}');var l=s(4848),d=s(8453);const r={},c="polyproto-chat HTTP API Specification",t={},h=[{value:"Authentication and Authorization",id:"authentication-and-authorization",level:2},{value:"Authorization Levels",id:"authorization-levels",level:3},{value:"Core Entities",id:"core-entities",level:2},{value:"Guild Object",id:"guild-object",level:3},{value:"Channel Object",id:"channel-object",level:3},{value:"Message Object",id:"message-object",level:3},{value:"Guild Management",id:"guild-management",level:2},{value:"Get Guild Information",id:"get-guild-information",level:3},{value:"Create Guild",id:"create-guild",level:3},{value:"Update Guild",id:"update-guild",level:3},{value:"Delete Guild",id:"delete-guild",level:3},{value:"Channel Management",id:"channel-management",level:2},{value:"Get Guild Channels",id:"get-guild-channels",level:3},{value:"Create Channel",id:"create-channel",level:3},{value:"Update Channel",id:"update-channel",level:3},{value:"Delete Channel",id:"delete-channel",level:3},{value:"Message Management",id:"message-management",level:2},{value:"Get Channel Messages",id:"get-channel-messages",level:3},{value:"Send Message",id:"send-message",level:3},{value:"Edit Message",id:"edit-message",level:3},{value:"Delete Message",id:"delete-message",level:3},{value:"Guild Membership",id:"guild-membership",level:2},{value:"Get Guild Members",id:"get-guild-members",level:3},{value:"Join Guild",id:"join-guild",level:3},{value:"Leave Guild",id:"leave-guild",level:3},{value:"Kick Member",id:"kick-member",level:3},{value:"Direct Messages",id:"direct-messages",level:2},{value:"Create DM Channel",id:"create-dm-channel",level:3},{value:"Get DM Channels",id:"get-dm-channels",level:3},{value:"File Attachments",id:"file-attachments",level:2},{value:"Upload Attachment",id:"upload-attachment",level:3},{value:"Get Attachment",id:"get-attachment",level:3},{value:"Guild Invites",id:"guild-invites",level:2},{value:"Create Invite",id:"create-invite",level:3},{value:"Get Guild Invites",id:"get-guild-invites",level:3},{value:"Delete Invite",id:"delete-invite",level:3},{value:"WebSocket Events",id:"websocket-events",level:2},{value:"Chat Opcodes",id:"chat-opcodes",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Rate Limiting",id:"rate-limiting",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"polyproto-chat-http-api-specification",children:"polyproto-chat HTTP API Specification"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Namespace:"})," ",(0,l.jsx)(n.code,{children:"chat"}),"\n",(0,l.jsx)(n.strong,{children:"Version:"})," ",(0,l.jsx)(n.code,{children:"v1.0-beta.1"}),"\n",(0,l.jsx)(n.strong,{children:"Base Path:"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/"})]}),"\n",(0,l.jsx)(n.p,{children:"polyproto-chat is a federated chat service for communities, built on the polyproto protocol.\nThis specification defines the HTTP API endpoints for core chat functionality including guilds,\nchannels, messages, and user management."}),"\n",(0,l.jsx)(n.h2,{id:"authentication-and-authorization",children:"Authentication and Authorization"}),"\n",(0,l.jsx)(n.p,{children:"All endpoints requiring authentication use Bearer token authentication as defined in the polyproto core specification. Session tokens are obtained through the core authentication flow and ID-Cert verification process."}),"\n",(0,l.jsx)(n.h3,{id:"authorization-levels",children:"Authorization Levels"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Public"}),": No authentication required"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Authenticated"}),": Requires valid session token"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Guild Member"}),": Requires guild membership"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Guild Admin"}),": Requires administrative permissions in guild"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Server Admin"}),": Requires server-wide administrative permissions"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"core-entities",children:"Core Entities"}),"\n",(0,l.jsx)(n.h3,{id:"guild-object",children:"Guild Object"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "id": "string",\n    "name": "string",\n    "description": "string",\n    "icon": "string",\n    "owner_id": "string",\n    "created_at": "number",\n    "member_count": "number",\n    "features": ["string"]\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"channel-object",children:"Channel Object"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "id": "string",\n    "guild_id": "string",\n    "name": "string",\n    "type": "number",\n    "position": "number",\n    "topic": "string",\n    "parent_id": "string",\n    "created_at": "number",\n    "permissions": {}\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"message-object",children:"Message Object"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "id": "string",\n    "channel_id": "string",\n    "author": {},\n    "content": "string",\n    "timestamp": "number",\n    "edited_timestamp": "number",\n    "signature": "string",\n    "id_cert": "string",\n    "attachments": [],\n    "embeds": [],\n    "reactions": []\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"guild-management",children:"Guild Management"}),"\n",(0,l.jsx)(n.h3,{id:"get-guild-information",children:"Get Guild Information"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"GET"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/guilds/{guild_id}"})]}),"\n",(0,l.jsx)(n.p,{children:"Retrieve information about a specific guild."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"guild_id"})," (path, required): The ID of the guild"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Public for discoverable guilds, Guild Member for private guilds"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"200"}),": Guild object"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Access forbidden"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Guild not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"create-guild",children:"Create Guild"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"POST"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/guilds"})]}),"\n",(0,l.jsx)(n.p,{children:"Create a new guild. Requires authentication."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Authenticated"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Request Body:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "name": "string",\n    "description": "string",\n    "icon": "string"\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"201"}),": Guild created successfully"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"400"}),": Invalid request body"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Insufficient permissions"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"update-guild",children:"Update Guild"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"PATCH"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/guilds/{guild_id}"})]}),"\n",(0,l.jsx)(n.p,{children:"Update guild settings. Requires guild administrative permissions."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"guild_id"})," (path, required): The ID of the guild"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Guild Admin"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Request Body:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "name": "string",\n    "description": "string",\n    "icon": "string"\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"200"}),": Guild updated successfully"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Insufficient permissions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Guild not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"delete-guild",children:"Delete Guild"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"DELETE"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/guilds/{guild_id}"})]}),"\n",(0,l.jsx)(n.p,{children:"Delete a guild. Only the guild owner can perform this action."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"guild_id"})," (path, required): The ID of the guild"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Guild Owner"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Headers:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"X-P2-Sensitive-Solution"})," (required): Second factor authentication for sensitive action"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"204"}),": Guild deleted successfully"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Insufficient permissions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Guild not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"channel-management",children:"Channel Management"}),"\n",(0,l.jsx)(n.h3,{id:"get-guild-channels",children:"Get Guild Channels"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"GET"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/guilds/{guild_id}/channels"})]}),"\n",(0,l.jsx)(n.p,{children:"Retrieve all channels in a guild."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"guild_id"})," (path, required): The ID of the guild"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Guild Member"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"200"}),": Array of channel objects"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Access forbidden"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Guild not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"create-channel",children:"Create Channel"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"POST"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/guilds/{guild_id}/channels"})]}),"\n",(0,l.jsx)(n.p,{children:"Create a new channel in a guild."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"guild_id"})," (path, required): The ID of the guild"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Guild Admin"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Request Body:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "name": "string",\n    "type": "number",\n    "topic": "string",\n    "parent_id": "string"\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"201"}),": Channel created successfully"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"400"}),": Invalid request body"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Insufficient permissions"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"update-channel",children:"Update Channel"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"PATCH"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/channels/{channel_id}"})]}),"\n",(0,l.jsx)(n.p,{children:"Update channel settings."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"channel_id"})," (path, required): The ID of the channel"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Guild Admin"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Request Body:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "name": "string",\n    "topic": "string",\n    "position": "number"\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"200"}),": Channel updated successfully"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Insufficient permissions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Channel not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"delete-channel",children:"Delete Channel"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"DELETE"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/channels/{channel_id}"})]}),"\n",(0,l.jsx)(n.p,{children:"Delete a channel."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"channel_id"})," (path, required): The ID of the channel"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Guild Admin"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"204"}),": Channel deleted successfully"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Insufficient permissions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Channel not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"message-management",children:"Message Management"}),"\n",(0,l.jsx)(n.h3,{id:"get-channel-messages",children:"Get Channel Messages"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"GET"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/channels/{channel_id}/messages"})]}),"\n",(0,l.jsx)(n.p,{children:"Retrieve messages from a channel with optional pagination."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"channel_id"})," (path, required): The ID of the channel"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"limit"})," (query, optional): Maximum number of messages to return (default: 50, max: 100)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"before"})," (query, optional): Get messages before this message ID"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"after"})," (query, optional): Get messages after this message ID"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Guild Member"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"200"}),": Array of message objects"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Access forbidden"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Channel not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"send-message",children:"Send Message"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"POST"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/channels/{channel_id}/messages"})]}),"\n",(0,l.jsx)(n.p,{children:"Send a message to a channel. Messages must be signed with the actor's private key."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"channel_id"})," (path, required): The ID of the channel"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Guild Member"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Request Body:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "content": "string",\n    "signature": "string",\n    "id_cert": "string",\n    "attachments": []\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"201"}),": Message sent successfully"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"400"}),": Invalid message content or signature"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Insufficient permissions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Channel not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"edit-message",children:"Edit Message"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"PATCH"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/channels/{channel_id}/messages/{message_id}"})]}),"\n",(0,l.jsx)(n.p,{children:"Edit a previously sent message. Only the message author can edit their messages."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"channel_id"})," (path, required): The ID of the channel"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"message_id"})," (path, required): The ID of the message"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Message Author"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Request Body:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "content": "string",\n    "signature": "string"\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"200"}),": Message edited successfully"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"400"}),": Invalid content or signature"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Insufficient permissions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Message not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"delete-message",children:"Delete Message"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"DELETE"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/channels/{channel_id}/messages/{message_id}"})]}),"\n",(0,l.jsx)(n.p,{children:"Delete a message. Authors can delete their own messages, administrators can delete any message."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"channel_id"})," (path, required): The ID of the channel"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"message_id"})," (path, required): The ID of the message"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Message Author or Guild Admin"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"204"}),": Message deleted successfully"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Insufficient permissions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Message not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"guild-membership",children:"Guild Membership"}),"\n",(0,l.jsx)(n.h3,{id:"get-guild-members",children:"Get Guild Members"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"GET"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/guilds/{guild_id}/members"})]}),"\n",(0,l.jsx)(n.p,{children:"Retrieve guild member list with optional pagination."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"guild_id"})," (path, required): The ID of the guild"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"limit"})," (query, optional): Maximum number of members to return (default: 100)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"after"})," (query, optional): Get members after this user ID"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Guild Member"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"200"}),": Array of member objects"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Access forbidden"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Guild not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"join-guild",children:"Join Guild"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"POST"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/guilds/{guild_id}/members"})]}),"\n",(0,l.jsx)(n.p,{children:"Join a guild using an invite code or if the guild is public."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"guild_id"})," (path, required): The ID of the guild"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Authenticated"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Request Body:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "invite_code": "string"\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"201"}),": Successfully joined guild"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"400"}),": Invalid invite code"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Cannot join guild"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Guild not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"leave-guild",children:"Leave Guild"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"DELETE"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/guilds/{guild_id}/members/@me"})]}),"\n",(0,l.jsx)(n.p,{children:"Leave a guild."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"guild_id"})," (path, required): The ID of the guild"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Guild Member"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"204"}),": Successfully left guild"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Guild not found or not a member"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"kick-member",children:"Kick Member"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"DELETE"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/guilds/{guild_id}/members/{user_id}"})]}),"\n",(0,l.jsx)(n.p,{children:"Remove a member from the guild."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"guild_id"})," (path, required): The ID of the guild"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"user_id"})," (path, required): The federation ID of the user to kick"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Guild Admin"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"204"}),": Member kicked successfully"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Insufficient permissions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Guild or member not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"direct-messages",children:"Direct Messages"}),"\n",(0,l.jsx)(n.h3,{id:"create-dm-channel",children:"Create DM Channel"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"POST"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/users/@me/channels"})]}),"\n",(0,l.jsx)(n.p,{children:"Create or retrieve a direct message channel with another user."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Authenticated"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Request Body:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "recipient_id": "string"\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"200"}),": Existing DM channel"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"201"}),": New DM channel created"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"400"}),": Invalid recipient"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": User not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"get-dm-channels",children:"Get DM Channels"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"GET"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/users/@me/channels"})]}),"\n",(0,l.jsx)(n.p,{children:"Retrieve all direct message channels for the authenticated user."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Authenticated"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"200"}),": Array of DM channel objects"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"file-attachments",children:"File Attachments"}),"\n",(0,l.jsx)(n.h3,{id:"upload-attachment",children:"Upload Attachment"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"POST"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/attachments"})]}),"\n",(0,l.jsx)(n.p,{children:"Upload a file attachment using the RawR resource system."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Authenticated"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Headers:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"Content-Length"})," (required): Size of the file in bytes"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Request Body:"})," Binary file data"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"201"}),": File uploaded successfully with resource ID"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"413"}),": File too large"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"415"}),": Unsupported file type"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"get-attachment",children:"Get Attachment"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"GET"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/attachments/{resource_id}"})]}),"\n",(0,l.jsx)(n.p,{children:"Retrieve a file attachment by resource ID."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"resource_id"})," (path, required): The resource ID of the attachment"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Context-dependent based on message permissions"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"200"}),": File data"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Access forbidden"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Attachment not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"guild-invites",children:"Guild Invites"}),"\n",(0,l.jsx)(n.h3,{id:"create-invite",children:"Create Invite"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"POST"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/channels/{channel_id}/invites"})]}),"\n",(0,l.jsx)(n.p,{children:"Create an invite for a guild channel."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"channel_id"})," (path, required): The ID of the channel"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Guild Member with invite permissions"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Request Body:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "max_age": "number",\n    "max_uses": "number",\n    "temporary": "boolean"\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"201"}),": Invite created successfully"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Insufficient permissions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Channel not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"get-guild-invites",children:"Get Guild Invites"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"GET"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/guilds/{guild_id}/invites"})]}),"\n",(0,l.jsx)(n.p,{children:"Retrieve all active invites for a guild."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"guild_id"})," (path, required): The ID of the guild"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Guild Admin"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"200"}),": Array of invite objects"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Insufficient permissions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Guild not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"delete-invite",children:"Delete Invite"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"DELETE"})," ",(0,l.jsx)(n.code,{children:"/.p2/chat/v1/invites/{invite_code}"})]}),"\n",(0,l.jsx)(n.p,{children:"Delete/revoke an invite."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"invite_code"})," (path, required): The invite code to revoke"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Authorization:"})," Guild Admin or Invite Creator"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Responses:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"204"}),": Invite deleted successfully"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"403"}),": Insufficient permissions"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"404"}),": Invite not found"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"websocket-events",children:"WebSocket Events"}),"\n",(0,l.jsxs)(n.p,{children:["polyproto-chat extends the core WebSocket protocol with chat-specific events. Clients must subscribe to the ",(0,l.jsx)(n.code,{children:"chat"})," service channel to receive these events."]}),"\n",(0,l.jsx)(n.h3,{id:"chat-opcodes",children:"Chat Opcodes"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Opcode"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"0"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Message Create"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"New message sent in a channel"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"1"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Message Update"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Message was edited"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"2"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Message Delete"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Message was deleted"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"3"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Channel Create"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"New channel created"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"4"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Channel Update"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Channel was updated"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"5"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Channel Delete"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Channel was deleted"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"6"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Guild Member Add"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"User joined guild"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"7"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Guild Member Remove"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"User left/was kicked from guild"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"8"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Guild Update"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Guild settings updated"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"9"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"Typing Start"}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"User started typing"})]})]})]}),"\n",(0,l.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,l.jsx)(n.p,{children:"All endpoints follow standard HTTP status codes and return error objects in the following format:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    "error": "string",\n    "message": "string",\n    "code": "number"\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"rate-limiting",children:"Rate Limiting"}),"\n",(0,l.jsx)(n.p,{children:"Rate limits are applied per authenticated user and follow Discord-like patterns:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Message sending: 5 messages per 5 seconds per channel"}),"\n",(0,l.jsx)(n.li,{children:"Channel creation: 5 channels per 5 minutes per guild"}),"\n",(0,l.jsx)(n.li,{children:"Guild operations: 5 operations per minute"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Rate limit headers are included in responses:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"X-RateLimit-Limit"}),": Request limit for the endpoint"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"X-RateLimit-Remaining"}),": Remaining requests in current window"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"X-RateLimit-Reset"}),": Time when rate limit resets"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var i=s(6540);const l={},d=i.createContext(l);function r(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);