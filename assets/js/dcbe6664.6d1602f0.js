"use strict";(self.webpackChunkpolyproto_docs=self.webpackChunkpolyproto_docs||[]).push([[2041],{186:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"protocols/core","title":"polyproto Core Protocol Specification","description":"The core protocol specification. Read this first!","source":"@site/docs/protocols/core.md","sourceDirName":"protocols","slug":"/protocols/core","permalink":"/docs/protocols/core","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"description":"The core protocol specification. Read this first!","title":"polyproto Core Protocol Specification"},"sidebar":"tutorialSidebar","previous":{"title":"Protocol Definitions","permalink":"/docs/category/protocol-definitions"},"next":{"title":"polyproto-auth Extension Specification","permalink":"/docs/protocols/auth"}}');var i=t(4848),r=t(8453);const a={sidebar_position:2,description:"The core protocol specification. Read this first!",title:"polyproto Core Protocol Specification"},o="polyproto Specification",c={},d=[{value:"1. Terminology used in this document",id:"1-terminology-used-in-this-document",level:2},{value:"2. Trust model",id:"2-trust-model",level:2},{value:"3. APIs and underlying communication protocols",id:"3-apis-and-underlying-communication-protocols",level:2},{value:"3.1 <code>.well-known</code>",id:"31-well-known",level:3},{value:"3.2 WebSocket Protocol",id:"32-websocket-protocol",level:3},{value:"3.2.1 Gateway Event Payloads",id:"321-gateway-event-payloads",level:4},{value:"3.2.1.1 Namespaces <code>n</code>",id:"3211-namespaces-n",level:5},{value:"3.2.1.2 Opcodes <code>op</code>",id:"3212-opcodes-op",level:5},{value:"3.2.1.3 Sequence numbers <code>s</code>",id:"3213-sequence-numbers-s",level:5},{value:"3.2.2 Heartbeats",id:"322-heartbeats",level:4},{value:"3.2.3 Gateway event payload definitions",id:"323-gateway-event-payload-definitions",level:4},{value:"3.2.3.1 &quot;Hello&quot; event",id:"3231-hello-event",level:5},{value:"3.2.3.2 Identify event",id:"3232-identify-event",level:5},{value:"3.2.3.3 Service channels",id:"3233-service-channels",level:5},{value:"3.2.3.4 New session event",id:"3234-new-session-event",level:5},{value:"3.2.3.5 Actor certificate invalidation event",id:"3235-actor-certificate-invalidation-event",level:5},{value:"3.2.3.6 &quot;Resume&quot; event and &quot;resumed&quot; event",id:"3236-resume-event-and-resumed-event",level:5},{value:"3.2.3.7 Server certificate change event",id:"3237-server-certificate-change-event",level:5},{value:"3.2.3.8 Heartbeat and heartbeat ACK events",id:"3238-heartbeat-and-heartbeat-ack-events",level:5},{value:"3.2.3.9 Heartbeat request",id:"3239-heartbeat-request",level:5},{value:"3.2.4 Establishing a connection",id:"324-establishing-a-connection",level:4},{value:"3.2.5 Closing a connection",id:"325-closing-a-connection",level:4},{value:"3.2.6 Guaranteed delivery of gateway messages through package acknowledgement",id:"326-guaranteed-delivery-of-gateway-messages-through-package-acknowledgement",level:4},{value:"3.3 Events over HTTP",id:"33-events-over-http",level:4},{value:"3.4 HTTP",id:"34-http",level:3},{value:"3.5 Internet Protocol (IP)",id:"35-internet-protocol-ip",level:3},{value:"3.6 Compression",id:"36-compression",level:3},{value:"4. Federated identity",id:"4-federated-identity",level:2},{value:"4.1 Authentication",id:"41-authentication",level:3},{value:"4.1.1 Authenticating on a foreign server",id:"411-authenticating-on-a-foreign-server",level:4},{value:"4.2 Sensitive actions",id:"42-sensitive-actions",level:3},{value:"4.3 Challenge strings",id:"43-challenge-strings",level:3},{value:"4.4 Protection against misuse by malicious home servers",id:"44-protection-against-misuse-by-malicious-home-servers",level:3},{value:"5. Federation IDs (FIDs)",id:"5-federation-ids-fids",level:2},{value:"6. Cryptography and ID-Certs",id:"6-cryptography-and-id-certs",level:2},{value:"6.1 Home server signed certificates for public client identity keys (ID-Cert)",id:"61-home-server-signed-certificates-for-public-client-identity-keys-id-cert",level:3},{value:"6.1.1 Structure of an ID-Cert",id:"611-structure-of-an-id-cert",level:4},{value:"6.1.1.1 polyproto Distinguished Name (<code>pDN</code>)",id:"6111-polyproto-distinguished-name-pdn",level:5},{value:"6.1.1.2 Extensions and constraints",id:"6112-extensions-and-constraints",level:5},{value:"6.1.1.3 Session IDs",id:"6113-session-ids",level:5},{value:"6.1.2 Necessity of ID-Certs",id:"612-necessity-of-id-certs",level:4},{value:"6.1.3 Key rotation",id:"613-key-rotation",level:4},{value:"6.1.4 Early revocation of ID-Certs",id:"614-early-revocation-of-id-certs",level:4},{value:"6.2 Actor identity keys and message signing",id:"62-actor-identity-keys-and-message-signing",level:3},{value:"6.2.1 Message verification",id:"621-message-verification",level:4},{value:"6.2.2 Handling of external messages",id:"622-handling-of-external-messages",level:4},{value:"6.3 Private key loss prevention and private key recovery",id:"63-private-key-loss-prevention-and-private-key-recovery",level:3},{value:"6.4 Caching of ID-Certs",id:"64-caching-of-id-certs",level:3},{value:"6.4.1 Verifying that a newly retrieved ID-Cert is not out of date",id:"641-verifying-that-a-newly-retrieved-id-cert-is-not-out-of-date",level:4},{value:"6.5 Cryptographic specifications",id:"65-cryptographic-specifications",level:3},{value:"6.6 Best practices",id:"66-best-practices",level:3},{value:"6.6.1 Signing keys and ID-Certs",id:"661-signing-keys-and-id-certs",level:4},{value:"6.6.2 Home server operation and design",id:"662-home-server-operation-and-design",level:4},{value:"6.6.3 Private key loss prevention and private key recovery",id:"663-private-key-loss-prevention-and-private-key-recovery",level:4},{value:"7. Migrations",id:"7-migrations",level:2},{value:"7.1 Identity migration",id:"71-identity-migration",level:3},{value:"7.1.1 Redirects",id:"711-redirects",level:4},{value:"7.2 Re-signing messages",id:"72-re-signing-messages",level:3},{value:"7.2.1 Message batches",id:"721-message-batches",level:4},{value:"7.2.2 Server-imposed limits",id:"722-server-imposed-limits",level:4},{value:"7.2.2.1 Body size",id:"7221-body-size",level:5},{value:"7.2.2.2 Interval between re-signing batches",id:"7222-interval-between-re-signing-batches",level:5},{value:"7.3 Moving data",id:"73-moving-data",level:3},{value:"7.3.1 Resource Addressing with Relative Roots",id:"731-resource-addressing-with-relative-roots",level:4},{value:"7.3.2 polyproto export/import format",id:"732-polyproto-exportimport-format",level:4},{value:"7.4 Challenges and trust",id:"74-challenges-and-trust",level:3},{value:"8. Protocol extensions (P2 extensions)",id:"8-protocol-extensions-p2-extensions",level:2},{value:"8.1 Extension design",id:"81-extension-design",level:3},{value:"8.2 Namespaces",id:"82-namespaces",level:3},{value:"8.3 Officially endorsed extensions",id:"83-officially-endorsed-extensions",level:3},{value:"8.4 Versioning and yanking",id:"84-versioning-and-yanking",level:3},{value:"8.4.1 Yanking",id:"841-yanking",level:4},{value:"8.5 Dependencies",id:"85-dependencies",level:3},{value:"8.6 Routes",id:"86-routes",level:3},{value:"9. Services",id:"9-services",level:2},{value:"9.1 Discoverability",id:"91-discoverability",level:2},{value:"9.1.1 Changing a primary service provider",id:"911-changing-a-primary-service-provider",level:3}];function h(e){const n={a:"a",admonition:"admonition",annotation:"annotation",blockquote:"blockquote",code:"code",div:"div",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",math:"math",mdxAdmonitionTitle:"mdxAdmonitionTitle",mermaid:"mermaid",mi:"mi",mo:"mo",mrow:"mrow",msub:"msub",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"polyproto-specification",children:"polyproto Specification"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Namespace:"})," ",(0,i.jsx)(n.code,{children:"core"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Version:"})," ",(0,i.jsx)(n.code,{children:"v1.0-beta.1"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Base Path:"})," ",(0,i.jsx)(n.code,{children:"/.p2/core/v1/"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"API documentation:"})," ",(0,i.jsx)(n.a,{href:"https://apidocs.polyproto.org",children:"apidocs.polyproto.org"})]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["The polyproto specification document is in an ",(0,i.jsx)(n.strong,{children:"early beta"})," phase. Please report any\ninconsistencies, missing or duplicate information and other mistakes at\n",(0,i.jsx)(n.a,{href:"https://github.com/polyphony-chat/docs/issues",children:"github.com/polyphony-chat/docs/issues"}),"."]})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://semver.org/spec/v2.0.0.html",children:"Semantic versioning v2.0.0"})," is used to version this specification."]}),"\n",(0,i.jsx)(n.p,{children:"The polyproto protocol is a home-server-based identity federation protocol specification intended\nfor use in applications where actor identity is needed. polyproto focuses on federated identity\nand does not specify any further application-specific features. It can be used standalone, as a\nmethod of authenticating across many applications and services, or as a base for federated protocol\nextensions and application implementations. The use of cryptography\u2014namely digital\nsignatures and X.509 certificates\u2014make polyproto identities verifiable and portable. polyproto\nempowers actors, as the home server can be changed at any time, without losing data or connections\nto other actors."}),"\n",(0,i.jsx)(n.p,{children:"This document is intended to be used as a starting point for developers wanting to develop software\nthat can operate with other polyproto implementations."}),"\n",(0,i.jsx)(n.h2,{id:"1-terminology-used-in-this-document",children:"1. Terminology used in this document"}),"\n",(0,i.jsx)(n.p,{children:"The following terminology is used throughout this document:"}),"\n",(0,i.jsx)(n.p,{children:"TODO: glossary is missing"}),"\n",(0,i.jsx)(n.h2,{id:"2-trust-model",children:"2. Trust model"}),"\n",(0,i.jsx)(n.p,{children:"polyproto operates under the following trust assumptions:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Users entrust their home server and its admins with data security and discretion on actions\nappearing as actor-performed, as, with most home server-based systems, it is\npossible for a home server to impersonate an actor in unencrypted communications."}),"\n",(0,i.jsxs)(n.li,{children:["Impersonation ",(0,i.jsx)(n.em,{children:"can"})," be detected by users, as home servers never have access to private keys of\nactors. To sign messages as an actor, a home server would have to use a different key pair."]}),"\n",(0,i.jsx)(n.li,{children:"Users only trust information that can be verified by cryptographic means. This includes\nverifying the identity of other actors and verifying the integrity of messages."}),"\n",(0,i.jsx)(n.li,{children:"In a federated context, users trust foreign servers with all unencrypted data they send\nto them."}),"\n",(0,i.jsx)(n.li,{children:"Foreign servers cannot impersonate users without immediate detection. Outsiders, meaning foreign\nservers and other actors, are unable to produce signatures that have a cryptographic connection\nto the actors' home server. This is assuming correct implementation of cryptographic\nstandards, secure home server operation, and non-compromised client devices, all of which are\nmostly out of the scope of this specification."}),"\n",(0,i.jsx)(n.li,{children:"Users rely on their home server for identity key certification, without the home server\npossessing the identity."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"3-apis-and-underlying-communication-protocols",children:"3. APIs and underlying communication protocols"}),"\n",(0,i.jsxs)(n.p,{children:["The polyproto specification defines a set of ",(0,i.jsx)(n.a,{href:"https://apidocs.polyproto.org",children:"APIs"}),".\nIn addition to these REST APIs, polyproto employs WebSockets for real-time communication between\nclients and servers."]}),"\n",(0,i.jsx)(n.p,{children:"The APIs are divided into two categories:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Routes: No registration needed"}),": These routes are available to all clients, regardless of\nwhether this server is the client's home server."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Routes: Registration needed"}),": These routes are only available to clients where the server is\nthe client's home server."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["All software aiming to federate with other polyproto implementations must implement the APIs defined\nin the ",(0,i.jsx)(n.a,{href:"https://apidocs.polyproto.org",children:"API specification"}),". Implementations can choose to extend the\nAPIs with additional routes but must not remove or change the behavior of the routes defined in\nthis specification."]}),"\n",(0,i.jsxs)(n.h3,{id:"31-well-known",children:["3.1 ",(0,i.jsx)(n.code,{children:".well-known"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"/.well-known/"})," locations facilitate the discovery of resources and services available on a given\nhost."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:['Consult the excerpt of this specification explaining what a "domain name" is, to avoid\nmisunderstandings. You can find this excerpt ',(0,i.jsx)(n.a,{href:"#def-domain-name",children:"here"}),"."]})}),"\n",(0,i.jsxs)(n.p,{children:["polyproto servers can be hosted under a domain name different from the domain name\nappearing on ID-Certs managed by that server ",(0,i.jsx)(n.strong,{children:"if all the following conditions are met:"})]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:['Define the "',(0,i.jsx)(n.em,{children:"visible domain name"}),'" as the domain name described by the ',(0,i.jsx)(n.a,{href:"#6111-polyproto-distinguished-name-pdn",children:"polyproto distinguished name"}),'\nof the "issuer" field on an ID-Cert.']}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:['Define the "',(0,i.jsx)(n.em,{children:"actual domain name"}),'" as the domain name where the polyproto server is actually hosted\nunder.']}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"visible domain name"})," ",(0,i.jsx)(n.strong,{children:"must"})," have a URI ",(0,i.jsx)(n.code,{children:"[visible domain name]/.well-known/polyproto-core"}),",\naccessible via an HTTP GET request."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The resource accessible at this URI must be a JSON object formatted as such:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n "api": "[actual domain name]/.p2/core/"\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["The ID-Cert received when querying ",(0,i.jsx)(n.code,{children:"[actual domain name]/.p2/core/idcert/server"}),' with an HTTP GET\nrequest must have a field "issuer" containing domain components (',(0,i.jsx)(n.code,{children:"dc"}),") that, when parsed, ",(0,i.jsx)(n.strong,{children:"equal"}),"\nthe domain name of the ",(0,i.jsx)(n.em,{children:"visible domain name"}),". If the domain components in this field do not match\nthe domain components of the ",(0,i.jsx)(n.em,{children:"visible domain name"}),", the server hosted under the ",(0,i.jsx)(n.em,{children:"actual domain name"}),"\nmust not be treated as a polyproto server for the ",(0,i.jsx)(n.em,{children:"visible domain name"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Every polyproto home server must have a ",(0,i.jsx)(n.code,{children:".well-known"})," URI, accessible via an HTTP GET request."]}),"\n",(0,i.jsxs)(n.p,{children:["Should a client not be able to access the polyproto API endpoints located at ",(0,i.jsx)(n.code,{children:"[visible domain name]/.p2/core/"}),",\nthe client must query ",(0,i.jsx)(n.code,{children:"[visible domain name]/.well-known/polyproto-core"})," with an HTTP GET request and\ntry to verify the above-mentioned conditions. If all the above-mentioned conditions can be fulfilled,\nthe client can treat the server located at the ",(0,i.jsx)(n.em,{children:"actual domain name"})," as a polyproto server serving the\n",(0,i.jsx)(n.em,{children:"visible domain name"}),". Clients must not treat the server located at the ",(0,i.jsx)(n.em,{children:"actual domain name"})," as a\npolyproto server serving the ",(0,i.jsx)(n.em,{children:"actual domain name"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"32-websocket-protocol",children:"3.2 WebSocket Protocol"}),"\n",(0,i.jsx)(n.p,{children:"WebSockets enable real-time, bidirectional communication between actor clients and home servers."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:'A polyproto WebSocket server is also called "Gateway" or "Gateway Server" for short.'})}),"\n",(0,i.jsx)(n.p,{children:"WebSocket connections to polyproto servers consist of the following, general cycle:"}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\nautonumber\n\nactor c as Client\nparticipant g as Gateway\n\nc->>g: Establish connection\ng->>c: Receive hello event\n\nloop TODO: interval\n  c->>g: Send heartbeat event\n  g->>c: Send heartbeat ACK event\nend\n\nc->>g: Send identify payload\n\nalt Server accepts\n  g->>c: Send ready event\nelse server-defined reason\n  g->>c: Disconnect with specified reason\nend\n\n\nopt Resume connection#59;<br />otherwise, repeat from step 1\n  c->>g: Open new connection\n  c->>g: Send resume event\n  g->>c: Send missed events\n  g->>c: Send resumed event\nend\n"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Fig. 1: Sequence diagram of a WebSocket connection to a polyproto server."})}),"\n",(0,i.jsx)(n.h4,{id:"321-gateway-event-payloads",children:"3.2.1 Gateway Event Payloads"}),"\n",(0,i.jsxs)(n.p,{children:["Gateway event payloads share a general structure, though the content of the ",(0,i.jsx)(n.code,{children:"d"})," field varies depending\non the specific event."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"n"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"#82-namespaces",children:"Namespace"})," context for this payload."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"op"})}),(0,i.jsx)(n.td,{children:"uint16"}),(0,i.jsx)(n.td,{children:"Gateway Opcode indicating the type of payload."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"d"})}),(0,i.jsx)(n.td,{children:"JSON value"}),(0,i.jsx)(n.td,{children:"The event data associated with this payload."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"s"}),"\xb9"]}),(0,i.jsx)(n.td,{children:"uint64"}),(0,i.jsx)(n.td,{children:"Sequence number of the event, used for guaranteed, ordered delivery"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"\xb9: This field is only received by clients and never sent to the server."}),"\n",(0,i.jsxs)(n.h5,{id:"3211-namespaces-n",children:["3.2.1.1 Namespaces ",(0,i.jsx)(n.code,{children:"n"})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"n"})," field in a gateway event payload indicates the namespace context for the payload. You can\nread more about namespaces in ",(0,i.jsx)(n.a,{href:"#82-namespaces",children:"section 8.2"}),".\nmessages\nEvery namespace may define its own set of opcodes and event names."]}),"\n",(0,i.jsx)(n.p,{children:"The namespace context must be known to the entity receiving the payload, as it is crucial for\ncorrectly interpreting the payload."}),"\n",(0,i.jsxs)(n.h5,{id:"3212-opcodes-op",children:["3.2.1.2 Opcodes ",(0,i.jsx)(n.code,{children:"op"})]}),"\n",(0,i.jsxs)(n.p,{children:["The following opcodes are defined by the ",(0,i.jsx)(n.code,{children:"core"})," namespace:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Opcode"}),(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"Action"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0"})}),(0,i.jsx)(n.td,{children:"Heartbeat"}),(0,i.jsx)(n.td,{children:"Actor Send"}),(0,i.jsx)(n.td,{children:"Keep alive for the WebSocket session."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"1"})}),(0,i.jsx)(n.td,{children:"Hello"}),(0,i.jsx)(n.td,{children:"Actor Receive"}),(0,i.jsx)(n.td,{children:"Received upon establishing a connection."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"2"})}),(0,i.jsx)(n.td,{children:"Identify"}),(0,i.jsx)(n.td,{children:"Actor Send"}),(0,i.jsx)(n.td,{children:"Identify to the server."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"3"})}),(0,i.jsx)(n.td,{children:"New Session"}),(0,i.jsx)(n.td,{children:"Actor Receive"}),(0,i.jsx)(n.td,{children:"Received by all sessions except the new one."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"4"})}),(0,i.jsx)(n.td,{children:"Actor Certificate Invalidation"}),(0,i.jsx)(n.td,{children:"Actor Send/Receive"}),(0,i.jsxs)(n.td,{children:["An actor certificate has been invalidated. Sent ",(0,i.jsx)(n.em,{children:"to"})," server when an actor invalidates one of their certificates."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"5"})}),(0,i.jsx)(n.td,{children:"Resume"}),(0,i.jsx)(n.td,{children:"Actor Send"}),(0,i.jsx)(n.td,{children:"Request the replaying events after re-connecting."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"6"})}),(0,i.jsx)(n.td,{children:"Server Certificate Change"}),(0,i.jsx)(n.td,{children:"Actor Receive"}),(0,i.jsx)(n.td,{children:"Received when the server's certificate changed."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"7"})}),(0,i.jsx)(n.td,{children:"Heartbeat ACK"}),(0,i.jsx)(n.td,{children:"Actor Receive"}),(0,i.jsx)(n.td,{children:"Acknowledgement of a heartbeat"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"8"})}),(0,i.jsx)(n.td,{children:"Service Channel"}),(0,i.jsx)(n.td,{children:"Actor Send/Receive"}),(0,i.jsx)(n.td,{children:"Open or close a service channel."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"9"})}),(0,i.jsx)(n.td,{children:"Service Channel ACK"}),(0,i.jsx)(n.td,{children:"Actor Receive"}),(0,i.jsx)(n.td,{children:"Acknowledgement of a service channel event."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"10"})}),(0,i.jsx)(n.td,{children:"Resumed"}),(0,i.jsx)(n.td,{children:"Actor Receive"}),(0,i.jsx)(n.td,{children:"Replayed events."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"11"})}),(0,i.jsx)(n.td,{children:"Heartbeat Request"}),(0,i.jsx)(n.td,{children:"Actor Receive"}),(0,i.jsx)(n.td,{children:"The server requests a heartbeat from the client ASAP."})]})]})]}),"\n",(0,i.jsxs)(n.h5,{id:"3213-sequence-numbers-s",children:["3.2.1.3 Sequence numbers ",(0,i.jsx)(n.code,{children:"s"})]}),"\n",(0,i.jsx)(n.p,{children:"Sequence numbers are unsigned integers with a 64 bit length. In the rare event that this integer should\noverflow, the server must close the connection to the client and prompt the client to initiate a new,\nnon-resumed gateway connection."}),"\n",(0,i.jsxs)(n.p,{children:["The sequence number increases by one for every gateway message sent by the server. The client must\nkeep track of received sequence numbers as part as the ",(0,i.jsx)(n.a,{href:"#326-guaranteed-delivery-of-gateway-messages-through-package-acknowledgement",children:"guaranteed delivery mechanism"}),".\nEvery gateway connection has its own sequence number counter, starting at 0 for the first event sent\nby the server."]}),"\n",(0,i.jsx)(n.h4,{id:"322-heartbeats",children:"3.2.2 Heartbeats"}),"\n",(0,i.jsxs)(n.p,{children:["Heartbeats are used to keep the WebSocket connection alive and, combined with ",(0,i.jsx)(n.a,{href:"#3213-sequence-numbers-s",children:"sequence numbers"}),",\nform an application-layer packet acknowledgement mechanism. The client continuously sends a heartbeat\nevent to the server with the interval specified in the ",(0,i.jsx)(n.a,{href:"#3231-hello-event",children:'"Hello" event payload'}),".\nThe server must acknowledge the heartbeat event by sending a heartbeat ACK event back to the client."]}),"\n",(0,i.jsx)(n.p,{children:"Servers must account for the time it takes for the client to send the heartbeat event."}),"\n",(0,i.jsxs)(n.p,{children:["Before closing a connection due to a missed heartbeat, the server should request a heartbeat event\nfrom the client by sending a heartbeat request event to the client. If the client is not responding within\na reasonable time frame, the server should close the gateway connection with an appropriate\n",(0,i.jsx)(n.a,{href:"#325-closing-a-connection",children:"close code"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The structure of the heartbeat and heartbeat ACK events are described in ",(0,i.jsx)(n.a,{href:"#3238-heartbeat-and-heartbeat-ack-events",children:"section 3.2.3.8"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Recommended values for heartbeat intervals are 30 to 60 seconds. The heartbeat interval is chosen by\nthe server."}),"\n",(0,i.jsx)(n.h4,{id:"323-gateway-event-payload-definitions",children:"3.2.3 Gateway event payload definitions"}),"\n",(0,i.jsx)(n.h5,{id:"3231-hello-event",children:'3.2.3.1 "Hello" event'}),"\n",(0,i.jsxs)(n.p,{children:['The "Hello" event is sent by the server to the client upon establishing a connection. The ',(0,i.jsx)(n.code,{children:"d"}),' payload\nfor a "Hello" event is an object containing a ',(0,i.jsx)(n.code,{children:"heartbeat_interval"})," field, which specifies the interval\nin milliseconds at which the client should send heartbeat events to the server."]}),"\n",(0,i.jsx)(n.admonition,{title:"Example hello event payload",type:"tip",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "n": "core",\n    "op": 1,\n    "d": {\n    "heartbeat_interval": 45000\n    },\n    "s": 0\n}\n'})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"heartbeat_interval"})}),(0,i.jsx)(n.td,{children:"uint32"}),(0,i.jsx)(n.td,{children:"Interval in milliseconds at which the client should send heartbeat events to the server."})]})})]}),"\n",(0,i.jsx)(n.h5,{id:"3232-identify-event",children:"3.2.3.2 Identify event"}),"\n",(0,i.jsx)(n.p,{children:'The "identify" event is sent by the client to the server to let the server know which actor the\nclient is.'}),"\n",(0,i.jsx)(n.admonition,{title:"Example identify event payload",type:"tip",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "n": "core",\n    "op": 2,\n    "d": {\n    "token": "a9144379a161e1fcf6b07801b70db6d6c481..."\n    }\n}\n'})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"token"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsxs)(n.td,{children:["A ",(0,i.jsx)(n.a,{href:"#41-authentication",children:"session token"})," issued by the server, identifying the session the client wants to connect with."]})]})})]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"This event may be extended in a backwards-compatible manner in future versions of polyproto."})}),"\n",(0,i.jsx)(n.h5,{id:"3233-service-channels",children:"3.2.3.3 Service channels"}),"\n",(0,i.jsx)(n.p,{children:"Service channels act like topics in a pub/sub system. They allow clients to subscribe to a specific\ntopic and receive messages sent to that topic."}),"\n",(0,i.jsx)(n.p,{children:"Converting that analogy to polyproto, service channels allow clients to subscribe to gateway events\nof additional namespaces. Service channels allow a unified way of giving extensions access to WebSockets\nwithout having to initialize a separate WebSocket connection."}),"\n",(0,i.jsx)(n.p,{children:"A service channel event payload has the following structure:"}),"\n",(0,i.jsx)(n.admonition,{title:"Example service channel event payload",type:"tip",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "n": "core",\n    "op": 8,\n    "d": {\n    "action": "subscribe",\n    "service": "service_name"\n    }\n}\n'})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"action"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsxs)(n.td,{children:["The action to perform on the service channel. Must be either ",(0,i.jsx)(n.code,{children:"subscribe"})," or ",(0,i.jsx)(n.code,{children:"unsubscribe"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"service"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The name of a polyproto service."})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["The server must respond with a ",(0,i.jsx)(n.code,{children:"Service Channel ACK"})," event payload, indicating whether the action\nwas successful or not. Clients should expect that the server sends a ",(0,i.jsx)(n.code,{children:"Service Channel"})," payload indicating\nthe closing of a channel."]}),"\n",(0,i.jsx)(n.admonition,{title:"Example service channel ACK event payload - failure",type:"tip",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n"n": "core",\n"op": 9,\n"d": {\n"action": "subscribe",\n"service": "service_name",\n"success": false,\n"error": "Service not found"\n},\n"s": 1\n}\n'})})}),"\n",(0,i.jsx)(n.admonition,{title:"Example service channel ACK event payload - success",type:"tip",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "n": "core",\n    "op": 9,\n    "d": {\n    "action": "subscribe",\n    "service": "service_name",\n    "success": true,\n    },\n    "s": 1\n}\n'})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"action"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsxs)(n.td,{children:["The action to perform on the service channel. Must be either ",(0,i.jsx)(n.code,{children:"subscribe"})," or ",(0,i.jsx)(n.code,{children:"unsubscribe"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"service"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The polyproto service that was specified in the opcode 8 request"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"success"})}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"Whether the action was successful or not."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"error"})}),(0,i.jsx)(n.td,{children:"string?"}),(0,i.jsxs)(n.td,{children:["Only present if ",(0,i.jsx)(n.code,{children:"success"})," is ",(0,i.jsx)(n.code,{children:"false"}),". A message indicating why the action failed."]})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"If a successful subscription to a service channel is acknowledged, all logic and further event on\nthis channel are defined by the service's specification."}),"\n",(0,i.jsx)(n.h5,{id:"3234-new-session-event",children:"3.2.3.4 New session event"}),"\n",(0,i.jsxs)(n.p,{children:['The "New Session" event is sent by the server to all sessions except the new one. The ',(0,i.jsx)(n.code,{children:"d"})," payload of\nthis event contains the ASCII-PEM encoded ID-Cert of the new session. You can find more information\nabout the new session mechanism in\n",(0,i.jsx)(n.a,{href:"#44-protection-against-misuse-by-malicious-home-servers",children:"section 4.4"}),"."]}),"\n",(0,i.jsx)(n.admonition,{title:"Example new session event payload",type:"tip",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "n": "core",\n    "op": 3,\n    "d": {\n    "cert": "-----BEGIN CERTIFICATE-----\\nMIIBIjANB..."\n    },\n    "s": 1\n}\n'})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"cert"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"ASCII-PEM encoded ID-Cert of the new session."})]})})]}),"\n",(0,i.jsx)(n.h5,{id:"3235-actor-certificate-invalidation-event",children:"3.2.3.5 Actor certificate invalidation event"}),"\n",(0,i.jsxs)(n.p,{children:["The actor certificate invalidation event is crucial to ensure that the client can detect and respond\nto changes in actor certificates. This prevents clients and servers from accepting outdated ID-Certs.\nThis event is only sent by servers if an ",(0,i.jsx)(n.a,{href:"#614-early-revocation-of-id-certs",children:"early revocation of an actor ID-Cert"}),"\noccurs."]}),"\n",(0,i.jsx)(n.admonition,{title:"Example actor certificate invalidation event payload",type:"tip",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "n": "core",\n    "op": 4,\n    "d": {\n    "serial": "11704583652649",\n    "invalidSince": "1737379403",\n    "signature": "8eacd92192bacc57bb5df3c7922e93bbc8b3f683f5dec9224353b102fa2f2a75"\n    },\n    "s": 1\n}\n'})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"serial"})}),(0,i.jsx)(n.td,{children:"uint64"}),(0,i.jsx)(n.td,{children:"The serial number of the invalidated ID-Cert"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"invalidSince"})}),(0,i.jsx)(n.td,{children:"uint64"}),(0,i.jsx)(n.td,{children:"UNIX timestamp of the point in time where this ID-Cert became invalid on"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"signature"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsxs)(n.td,{children:["Signature of a string concatenation of the ",(0,i.jsx)(n.code,{children:"invalidSince"})," timestamp and the ",(0,i.jsx)(n.code,{children:"serial"})," number, in that order. Clients must verify this signature, verifying that the signature was generated by the private key of the revoked certificate."]})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"3236-resume-event-and-resumed-event",children:'3.2.3.6 "Resume" event and "resumed" event'}),"\n",(0,i.jsx)(n.p,{children:"When a client re-connects to a polyproto WebSocket gateway server, the client may send a resume event\nto the server instead of identifying. The resumed event sent by the server informs the client\nabout everything the client has missed since their last active connection to the gateway."}),"\n",(0,i.jsx)(n.admonition,{title:"Example resume event structure",type:"tip",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "n": "core",\n    "op": 5,\n    "d": {\n    "s": 12,\n    "token": "aDHsdfghihn2n0c634tnlxibnd2tz09y8m7kbxti7rg"\n    }\n}\n'})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"s"})}),(0,i.jsx)(n.td,{children:"uint64"}),(0,i.jsx)(n.td,{children:'Sequence number of the last event received by the client; aka. "Where to receive from".'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"token"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsxs)(n.td,{children:["A ",(0,i.jsx)(n.a,{href:"#41-authentication",children:"session token"})," issued by the server, identifying the session the client wants to connect with."]})]})]})]}),"\n",(0,i.jsx)(n.admonition,{title:'Example "resumed" event',type:"tip",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "n": "core",\n    "op": 10,\n    "d": {\n    [\n        {\n        "n": "core",\n        "op": 6,\n        "d": {\n            "payload data"\n        }\n        },\n        {\n        "n": "core",\n        "op": 9,\n        "d": {\n            ...\n        }\n        },\n        ...\n    ]\n    },\n}\n'})})}),"\n",(0,i.jsx)(n.p,{children:'As touched on earlier, the "resumed" event contains all relevant events the client has missed.'}),"\n",(0,i.jsx)(n.p,{children:'"Missed events" are events with'}),"\n",(0,i.jsx)(n.span,{className:"katex-display",children:(0,i.jsxs)(n.span,{className:"katex",children:[(0,i.jsx)(n.span,{className:"katex-mathml",children:(0,i.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block",children:(0,i.jsxs)(n.semantics,{children:[(0,i.jsxs)(n.mrow,{children:[(0,i.jsxs)(n.msub,{children:[(0,i.jsx)(n.mi,{children:"s"}),(0,i.jsxs)(n.mrow,{children:[(0,i.jsx)(n.mi,{children:"e"}),(0,i.jsx)(n.mi,{children:"v"}),(0,i.jsx)(n.mi,{children:"e"}),(0,i.jsx)(n.mi,{children:"n"}),(0,i.jsx)(n.mi,{children:"t"})]})]}),(0,i.jsx)(n.mo,{children:">"}),(0,i.jsxs)(n.msub,{children:[(0,i.jsx)(n.mi,{children:"s"}),(0,i.jsxs)(n.mrow,{children:[(0,i.jsx)(n.mi,{children:"r"}),(0,i.jsx)(n.mi,{children:"e"}),(0,i.jsx)(n.mi,{children:"s"}),(0,i.jsx)(n.mi,{children:"u"}),(0,i.jsx)(n.mi,{children:"m"}),(0,i.jsx)(n.mi,{children:"e"})]})]})]}),(0,i.jsx)(n.annotation,{encoding:"application/x-tex",children:"s_{event} \\gt s_{resume}"})]})})}),(0,i.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"0.6891em",verticalAlign:"-0.15em"}}),(0,i.jsxs)(n.span,{className:"mord",children:[(0,i.jsx)(n.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(n.span,{className:"msupsub",children:(0,i.jsxs)(n.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(n.span,{className:"vlist-r",children:[(0,i.jsx)(n.span,{className:"vlist",style:{height:"0.2806em"},children:(0,i.jsxs)(n.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,i.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(n.span,{className:"mord mtight",children:[(0,i.jsx)(n.span,{className:"mord mathnormal mtight",children:"e"}),(0,i.jsx)(n.span,{className:"mord mathnormal mtight",style:{marginRight:"0.03588em"},children:"v"}),(0,i.jsx)(n.span,{className:"mord mathnormal mtight",children:"e"}),(0,i.jsx)(n.span,{className:"mord mathnormal mtight",children:"n"}),(0,i.jsx)(n.span,{className:"mord mathnormal mtight",children:"t"})]})})]})}),(0,i.jsx)(n.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(n.span,{className:"vlist-r",children:(0,i.jsx)(n.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(n.span,{})})})]})})]}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(n.span,{className:"mrel",children:">"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"0.5806em",verticalAlign:"-0.15em"}}),(0,i.jsxs)(n.span,{className:"mord",children:[(0,i.jsx)(n.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(n.span,{className:"msupsub",children:(0,i.jsxs)(n.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(n.span,{className:"vlist-r",children:[(0,i.jsx)(n.span,{className:"vlist",style:{height:"0.1514em"},children:(0,i.jsxs)(n.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,i.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(n.span,{className:"mord mtight",children:[(0,i.jsx)(n.span,{className:"mord mathnormal mtight",children:"res"}),(0,i.jsx)(n.span,{className:"mord mathnormal mtight",children:"u"}),(0,i.jsx)(n.span,{className:"mord mathnormal mtight",children:"m"}),(0,i.jsx)(n.span,{className:"mord mathnormal mtight",children:"e"})]})})]})}),(0,i.jsx)(n.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(n.span,{className:"vlist-r",children:(0,i.jsx)(n.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(n.span,{})})})]})})]})]})]})]})}),"\n",(0,i.jsxs)(n.p,{children:["where ",(0,i.jsxs)(n.span,{className:"katex",children:[(0,i.jsx)(n.span,{className:"katex-mathml",children:(0,i.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(n.semantics,{children:[(0,i.jsx)(n.mrow,{children:(0,i.jsxs)(n.msub,{children:[(0,i.jsx)(n.mi,{children:"s"}),(0,i.jsxs)(n.mrow,{children:[(0,i.jsx)(n.mi,{children:"r"}),(0,i.jsx)(n.mi,{children:"e"}),(0,i.jsx)(n.mi,{children:"s"}),(0,i.jsx)(n.mi,{children:"u"}),(0,i.jsx)(n.mi,{children:"m"}),(0,i.jsx)(n.mi,{children:"e"})]})]})}),(0,i.jsx)(n.annotation,{encoding:"application/x-tex",children:"s_{resume}"})]})})}),(0,i.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"0.5806em",verticalAlign:"-0.15em"}}),(0,i.jsxs)(n.span,{className:"mord",children:[(0,i.jsx)(n.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(n.span,{className:"msupsub",children:(0,i.jsxs)(n.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(n.span,{className:"vlist-r",children:[(0,i.jsx)(n.span,{className:"vlist",style:{height:"0.1514em"},children:(0,i.jsxs)(n.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,i.jsx)(n.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(n.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(n.span,{className:"mord mtight",children:[(0,i.jsx)(n.span,{className:"mord mathnormal mtight",children:"res"}),(0,i.jsx)(n.span,{className:"mord mathnormal mtight",children:"u"}),(0,i.jsx)(n.span,{className:"mord mathnormal mtight",children:"m"}),(0,i.jsx)(n.span,{className:"mord mathnormal mtight",children:"e"})]})})]})}),(0,i.jsx)(n.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(n.span,{className:"vlist-r",children:(0,i.jsx)(n.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(n.span,{})})})]})})]})]})})]})," is equal to the parameter ",(0,i.jsx)(n.code,{children:"s"})," supplied by the client in the resume event."]}),"\n",(0,i.jsx)(n.p,{children:'A set of "relevant events" is a set of events which meet both of the following conditions:'}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Each event in the set is intended to be received by the client"}),"\n",(0,i.jsx)(n.li,{children:"The set must contain the lowest possible amount of events necessary for the client to be informed\nabout everything that happened while they were disconnected."}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{title:"Example for condition #2",type:"tip",children:[(0,i.jsx)(n.p,{children:'Assume, that an event "total number of messages sent" exists. The value of this event\npayload is a number, representing the total number of messages sent on the entire server. Under\nnormal circumstances, each client receives this imaginary event every time this state changes.'}),(0,i.jsx)(n.p,{children:'For the client to resume, the server should not send each individual update of this value to the\nclient as part of the "resumed" event. Instead, it would be sufficient to send the most\nup-to-date value of this event as part of the "resumed" payload, since how many times this event\nhas been fired and what previous values of this event were, has no impact\non the validity or state of other events.'}),(0,i.jsx)(n.p,{children:"Certificate change events are an example of events, where all intermediary values of the event\nare important as well. This is because a client could have sent a message where the signature was\ngenerated using a revoked certificate. In other words, intermediary values of this event type\naffect the validity or state of other events."})]}),"\n",(0,i.jsx)(n.p,{children:"Servers may reject a clients' wish to resume, if"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The number of events that would need to be replayed is too high for the server to process."}),"\n",(0,i.jsx)(n.li,{children:"The client is not eligible to resume and must start a new session instead."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["In this case, the request to resume is met with an appropriate ",(0,i.jsx)(n.a,{href:"#325-closing-a-connection",children:"close code"}),"\n(ex.: ",(0,i.jsx)(n.code,{children:"4010"}),") by the server and the connection is terminated."]}),"\n",(0,i.jsx)(n.h5,{id:"3237-server-certificate-change-event",children:"3.2.3.7 Server certificate change event"}),"\n",(0,i.jsxs)(n.p,{children:["The server certificate change event notifies clients about a new server ID-Cert. The ",(0,i.jsx)(n.code,{children:"d"})," payload\nof this event contains the ASCII-PEM encoded ID-Cert of the server."]}),"\n",(0,i.jsx)(n.admonition,{title:"Example server certificate change event payload",type:"tip",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "n": "core",\n    "op": 6,\n    "d": {\n    "cert": "-----BEGIN CERTIFICATE-----\\nMIIBIjANB...",\n    "oldInvalidSince": 1630012713\n    },\n    "s": 1\n}\n'})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"cert"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"ASCII-PEM encoded server ID-Cert. The server ID-Cert is self-signed."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"oldInvalidSince"})}),(0,i.jsx)(n.td,{children:"uint64"}),(0,i.jsx)(n.td,{children:"A UNIX timestamp indicating when the old server ID-Cert became invalid."})]})]})]}),"\n",(0,i.jsx)(n.h5,{id:"3238-heartbeat-and-heartbeat-ack-events",children:"3.2.3.8 Heartbeat and heartbeat ACK events"}),"\n",(0,i.jsxs)(n.p,{children:["The heartbeat event is sent by the client to the server to keep the WebSocket connection alive.\nThe payload for the heartbeat event is a minified number list. Minified number lists are a JSON\nobject with the fields ",(0,i.jsx)(n.code,{children:"from"}),", ",(0,i.jsx)(n.code,{children:"to"}),", and ",(0,i.jsx)(n.code,{children:"except"}),". The ",(0,i.jsx)(n.code,{children:"from"})," and ",(0,i.jsx)(n.code,{children:"to"})," fields are strings representing\na range of numbers. The ",(0,i.jsx)(n.code,{children:"except"})," field is an array of strings representing numbers that are not\nincluded in the range."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Numbers are formatted as strings due to JSON conventions. Every number in the ",(0,i.jsx)(n.code,{children:"from"}),", ",(0,i.jsx)(n.code,{children:"to"})," and\n",(0,i.jsx)(n.code,{children:"except"})," fields is a valid, unsigned integer of up to 64 bits."]})}),"\n",(0,i.jsxs)(n.p,{children:["The range described by the ",(0,i.jsx)(n.code,{children:"from"})," and ",(0,i.jsx)(n.code,{children:"to"})," fields is a mathematical, closed interval, where\n",(0,i.jsx)(n.code,{children:"from"})," is equal to ",(0,i.jsxs)(n.span,{className:"katex",children:[(0,i.jsx)(n.span,{className:"katex-mathml",children:(0,i.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(n.semantics,{children:[(0,i.jsx)(n.mrow,{children:(0,i.jsx)(n.mi,{children:"a"})}),(0,i.jsx)(n.annotation,{encoding:"application/x-tex",children:"a"})]})})}),(0,i.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"a"})]})})]})," and ",(0,i.jsx)(n.code,{children:"to"})," is equal to ",(0,i.jsxs)(n.span,{className:"katex",children:[(0,i.jsx)(n.span,{className:"katex-mathml",children:(0,i.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(n.semantics,{children:[(0,i.jsx)(n.mrow,{children:(0,i.jsx)(n.mi,{children:"b"})}),(0,i.jsx)(n.annotation,{encoding:"application/x-tex",children:"b"})]})})}),(0,i.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"0.6944em"}}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"b"})]})})]})," :"]}),"\n",(0,i.jsx)(n.span,{className:"katex-display",children:(0,i.jsxs)(n.span,{className:"katex",children:[(0,i.jsx)(n.span,{className:"katex-mathml",children:(0,i.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block",children:(0,i.jsxs)(n.semantics,{children:[(0,i.jsxs)(n.mrow,{children:[(0,i.jsx)(n.mo,{stretchy:"false",children:"["}),(0,i.jsx)(n.mi,{children:"a"}),(0,i.jsx)(n.mo,{separator:"true",children:","}),(0,i.jsx)(n.mi,{children:"b"}),(0,i.jsx)(n.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(n.mo,{children:"="}),(0,i.jsx)(n.mo,{stretchy:"false",children:"{"}),(0,i.jsx)(n.mi,{children:"x"}),(0,i.jsx)(n.mo,{children:"\u2208"}),(0,i.jsx)(n.mi,{mathvariant:"double-struck",children:"N"}),(0,i.jsx)(n.mo,{children:"\u2223"}),(0,i.jsx)(n.mi,{children:"a"}),(0,i.jsx)(n.mo,{children:"\u2264"}),(0,i.jsx)(n.mi,{children:"x"}),(0,i.jsx)(n.mo,{children:"\u2264"}),(0,i.jsx)(n.mi,{children:"b"}),(0,i.jsx)(n.mo,{stretchy:"false",children:"}"})]}),(0,i.jsx)(n.annotation,{encoding:"application/x-tex",children:"[a,b]=\\{x\\in \\mathbb {N} \\mid a\\leq x\\leq b\\}"})]})})}),(0,i.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(n.span,{className:"mopen",children:"["}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(n.span,{className:"mpunct",children:","}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"b"}),(0,i.jsx)(n.span,{className:"mclose",children:"]"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(n.span,{className:"mrel",children:"="}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(n.span,{className:"mopen",children:"{"}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(n.span,{className:"mrel",children:"\u2208"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(n.span,{className:"mord mathbb",children:"N"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(n.span,{className:"mrel",children:"\u2223"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"0.7719em",verticalAlign:"-0.136em"}}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(n.span,{className:"mrel",children:"\u2264"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"0.7719em",verticalAlign:"-0.136em"}}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(n.span,{className:"mrel",children:"\u2264"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"b"}),(0,i.jsx)(n.span,{className:"mclose",children:"}"})]})]})]})}),"\n",(0,i.jsx)(n.admonition,{title:"Minified number list",type:"tip",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    from: "1",\n    to: "20",\n    except: ["9", "12", "13"]\n}\n'})})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"from"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The lowest sequence number received this heartbeat interval"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"to"})}),(0,i.jsx)(n.td,{children:"string"}),(0,i.jsx)(n.td,{children:"The highest sequence number received this heartbeat interval"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"except"})}),(0,i.jsx)(n.td,{children:"array[string]?"}),(0,i.jsxs)(n.td,{children:["Sequence numbers ",(0,i.jsx)(n.code,{children:"x"}),", where {",(0,i.jsxs)(n.span,{className:"katex",children:[(0,i.jsx)(n.span,{className:"katex-mathml",children:(0,i.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(n.semantics,{children:[(0,i.jsxs)(n.mrow,{children:[(0,i.jsx)(n.mi,{children:"x"}),(0,i.jsx)(n.mo,{children:"\u2208"}),(0,i.jsx)(n.mi,{mathvariant:"double-struck",children:"N"}),(0,i.jsx)(n.mo,{children:"\u2223"}),(0,i.jsx)(n.mi,{children:"f"}),(0,i.jsx)(n.mi,{children:"r"}),(0,i.jsx)(n.mi,{children:"o"}),(0,i.jsx)(n.mi,{children:"m"}),(0,i.jsx)(n.mo,{children:"\u2264"}),(0,i.jsx)(n.mi,{children:"x"}),(0,i.jsx)(n.mo,{children:"\u2264"}),(0,i.jsx)(n.mi,{children:"t"}),(0,i.jsx)(n.mi,{children:"o"}),(0,i.jsx)(n.mo,{stretchy:"false",children:"}"})]}),(0,i.jsx)(n.annotation,{encoding:"application/x-tex",children:"x \\in \\mathbb{N} \\mid from\\leq x\\leq to\\}"})]})})}),(0,i.jsxs)(n.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"0.5782em",verticalAlign:"-0.0391em"}}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(n.span,{className:"mrel",children:"\u2208"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(n.span,{className:"mord mathbb",children:"N"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(n.span,{className:"mrel",children:"\u2223"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"0.8889em",verticalAlign:"-0.1944em"}}),(0,i.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.10764em"},children:"f"}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"ro"}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"m"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(n.span,{className:"mrel",children:"\u2264"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"0.7719em",verticalAlign:"-0.136em"}}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(n.span,{className:"mrel",children:"\u2264"}),(0,i.jsx)(n.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(n.span,{className:"base",children:[(0,i.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(n.span,{className:"mord mathnormal",children:"o"}),(0,i.jsx)(n.span,{className:"mclose",children:"}"})]})]})]}),", that were not received this heartbeat interval."]})]})]})]}),"\n",(0,i.jsx)(n.admonition,{title:"Example heartbeat event payload",type:"tip",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "n": "core",\n    "op": 0,\n    "d": {\n    "from": "213",\n    "to": "219"\n    "except": ["214", "216"]\n    },\n    "s": 1\n}\n'})})}),"\n",(0,i.jsx)(n.p,{children:"A heartbeat ACK contains events that the client has re-requested as part of their heartbeat message."}),"\n",(0,i.jsx)(n.admonition,{title:"Example heartbeat ACK event payload",type:"tip",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "n": "core",\n    "op": 7,\n    "d": {\n    [\n        {\n        "n": "core",\n        "op": 6,\n        "d": {\n            "payload data"\n        }\n        },\n        {\n        "n": "core",\n        "op": 9,\n        "d": {\n            ...\n        }\n        },\n        ...\n    ]\n    },\n    "s": 1\n}\n'})})}),"\n",(0,i.jsxs)(n.p,{children:["As such, the field ",(0,i.jsx)(n.code,{children:"d"})," in a heartbeat ack may be empty, but never not present. The ",(0,i.jsx)(n.code,{children:"d"})," field contains\nan array of other gateway events. Heartbeat ACK payloads must not be present in this array, making recursion\nimpossible."]}),"\n",(0,i.jsx)(n.h5,{id:"3239-heartbeat-request",children:"3.2.3.9 Heartbeat request"}),"\n",(0,i.jsx)(n.p,{children:'The server may manually request a heartbeat from a client at any time.\nA heartbeat is usually manually requested, if the server has not received a heartbeat from the client\nin due time. Clients should keep their "heartbeat timer" running as is after sending a heartbeat following\na heartbeat request.'}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:'If the client heartbeat timer states that the next heartbeat in a heartbeat interval of 45 seconds\nis due in 8 seconds, the timer should still "read" ~8 seconds after a manual heartbeat request\nhas been fulfilled. Of course, the client should not send the same heartbeat twice.'})}),"\n",(0,i.jsxs)(n.p,{children:["Heartbeat request events do not carry any data in their ",(0,i.jsx)(n.code,{children:"d"})," payload."]}),"\n",(0,i.jsx)(n.admonition,{title:"Example heartbeat request event payload",type:"tip",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "n": "core",\n    "op": 7,\n    "d": {},\n    "s": 1\n}\n'})})}),"\n",(0,i.jsx)(n.h4,{id:"324-establishing-a-connection",children:"3.2.4 Establishing a connection"}),"\n",(0,i.jsx)(n.p,{children:"The following diagram illustrates the process of establishing a WebSocket connection, including authentication, error handling with close codes, heartbeat, and session resumption:"}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\nautonumber\nactor C as Client\nparticipant G as Gateway\n\nC->>G: Open WebSocket connection\nG->>C: Hello event (heartbeat interval)\nC->>G: Identify (session token)\nalt Authentication success\n  G->>C: Ready event\nelse Invalid authentication\n  G-xC: Close (4004 Invalid authentication)\n  Note right of C: Connection closed, must retry\nelse Already authenticated\n  G-xC: Close (4005 Already authenticated)\n  Note right of C: Protocol error, must reconnect\nend\n\npar Heartbeats\n  loop Heartbeat interval\n    C->>G: Heartbeat\n    G->>C: Heartbeat ACK\n  end\nand Missed heartbeat\n  G->>C: Heartbeat request\n  alt No response\n    G-xC: Close (4009 Timeout)\n    Note right of C: Connection closed due to timeout\n  end\nend\n\nopt Resume session\n  C->>G: Resume (last sequence, token)\n  alt Resume accepted\n    G->>C: Resumed event\n  else Too many events or not eligible\n    G-xC: Close (4010 Unresumeable)\n    Note right of C: Must start new session\n  end\nend"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Fig. X: Sequence diagram of WebSocket connection establishment, authentication, heartbeat, and error handling in polyproto."})}),"\n",(0,i.jsx)(n.h4,{id:"325-closing-a-connection",children:"3.2.5 Closing a connection"}),"\n",(0,i.jsxs)(n.p,{children:["At any time during the connection, the server or client may wish to terminate the session in an\norderly fashion. This is being done by sending a ",(0,i.jsx)(n.a,{href:"https://www.rfc-editor.org/rfc/rfc6455.html#section-7.1.5",children:"WebSocket close code"}),"\nto the recipient. In addition to the pre-defined status codes in ",(0,i.jsx)(n.a,{href:"https://www.rfc-editor.org/rfc/rfc6455.html",children:"IETF RFC #6455"}),",\npolyproto servers and clients must know of and use the following status codes in their appropriate\nsituations:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Code"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Explanation"}),(0,i.jsxs)(n.th,{children:["Eligible for ",(0,i.jsx)(n.code,{children:"RESUME"}),"?"]}),(0,i.jsx)(n.th,{children:"Sent by server?"}),(0,i.jsx)(n.th,{children:"Sent by client?"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"4000"})}),(0,i.jsx)(n.td,{children:"Unknown error"}),(0,i.jsx)(n.td,{children:"An unknown error has occurred and the connection was terminated."}),(0,i.jsx)(n.td,{children:"x"}),(0,i.jsx)(n.td,{children:"x"}),(0,i.jsx)(n.td,{children:"x"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"4001"})}),(0,i.jsx)(n.td,{children:"Unknown opcode"}),(0,i.jsxs)(n.td,{children:["The client has sent a message with an unknown ",(0,i.jsx)(n.a,{href:"#3212-opcodes-op",children:"opcode"})," to the server."]}),(0,i.jsx)(n.td,{children:"x"}),(0,i.jsx)(n.td,{children:"x"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"4002"})}),(0,i.jsx)(n.td,{children:"Invalid payload"}),(0,i.jsx)(n.td,{children:"The client has sent a message with an invalid payload to the server."}),(0,i.jsx)(n.td,{children:"x"}),(0,i.jsx)(n.td,{children:"x"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"4003"})}),(0,i.jsx)(n.td,{children:"Not authenticated"}),(0,i.jsx)(n.td,{children:"The server has received a message from the client before the client identified itself, or the clients' session has been invalidated."}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"x"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"4004"})}),(0,i.jsx)(n.td,{children:"Invalid authentication"}),(0,i.jsx)(n.td,{children:"The authentication token received by the server as part of the identify payload is invalid."}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"x"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"4005"})}),(0,i.jsx)(n.td,{children:"Already authenticated"}),(0,i.jsx)(n.td,{children:"The client has sent an identify payload even though it has already identified successfully."}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"x"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"4006"})}),(0,i.jsx)(n.td,{children:"Reserved"}),(0,i.jsx)(n.td,{children:"4006 is a reserved value and has no function in polyproto v1.0. The specific meaning may be defined in the future."}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"4007"})}),(0,i.jsx)(n.td,{children:"Invalid sequence number(s)"}),(0,i.jsx)(n.td,{children:"The client has sent a heartbeat containing sequence numbers that were invalid."}),(0,i.jsx)(n.td,{children:"x"}),(0,i.jsx)(n.td,{children:"x"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"4008"})}),(0,i.jsx)(n.td,{children:"Rate limited"}),(0,i.jsx)(n.td,{children:"The client has sent payloads too quickly."}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"x"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"4009"})}),(0,i.jsx)(n.td,{children:"Timeout"}),(0,i.jsx)(n.td,{children:"The session has been deemed to be timed out. This can happen if a heartbeat or heartbeat ACK has not been sent in due time."}),(0,i.jsx)(n.td,{children:"x (If sent by server)"}),(0,i.jsx)(n.td,{children:"x"}),(0,i.jsx)(n.td,{children:"x"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"4010"})}),(0,i.jsx)(n.td,{children:"Unresumeable"}),(0,i.jsx)(n.td,{children:"The server has determined that this session cannot be resumed. The client should initiate a new, fresh connection to the gateway instead."}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"x"}),(0,i.jsx)(n.td,{})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"326-guaranteed-delivery-of-gateway-messages-through-package-acknowledgement",children:"3.2.6 Guaranteed delivery of gateway messages through package acknowledgement"}),"\n",(0,i.jsxs)(n.p,{children:["polyproto implements an application-level guaranteed delivery mechanism. This ensures that all gateway\nmessages sent from a home server to a client are received by the client in the order they were sent\nin \u2013 especially when network conditions are suboptimal. This mechanism is based on the use of\n",(0,i.jsx)(n.a,{href:"#3213-sequence-numbers-s",children:"sequence numbers"})," and ",(0,i.jsx)(n.a,{href:"#322-heartbeats",children:"heartbeats"}),"."]}),"\n",(0,i.jsx)(n.p,{children:'??? question "Doesn\'t TCP already cover this?"'}),"\n",(0,i.jsx)(n.p,{children:"While TCP ensures reliable delivery of data during an active connection, it does not retain\nknowledge of application-layer messages if a disconnect occurs. In such cases, the application\nmust implement its own mechanisms to track which messages were successfully received."}),"\n",(0,i.jsx)(n.p,{children:"Application-layer acknowledgements allow the protocol to recover from interruptions by\nidentifying any messages that were lost during the disconnect and ensuring they are\nretransmitted, preserving the integrity and completeness of communication between the client\nand server."}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"#3238-heartbeat-and-heartbeat-ack-events",children:"heartbeat payload"})," defines a payload parameter ",(0,i.jsx)(n.code,{children:"except"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"except"})," was present and contained entries in the heartbeat payload sent by a client, the server\nmust re-send these events in the ",(0,i.jsx)(n.code,{children:"d"})," part of the heartbeat ACK response. How this ",(0,i.jsx)(n.code,{children:"d"})," payload is to be\nformatted is also defined in ",(0,i.jsx)(n.a,{href:"#3238-heartbeat-and-heartbeat-ack-events",children:"section 3.2.3.8"}),"."]}),"\n",(0,i.jsx)(n.p,{children:'The server must prioritize sending these "missed" events over other events. The server should expect\nthat a client requests these events yet another time.'}),"\n",(0,i.jsx)(n.h4,{id:"33-events-over-http",children:"3.3 Events over HTTP"}),"\n",(0,i.jsx)(n.p,{children:"For some implementation contexts, a constant WebSocket connection might not be wanted. A client can\ninstead opt to query an API endpoint to receive events, which would normally be sent through the WebSocket\nconnection. Concrete polyproto implementations and extensions can decide whether this alternative\nbehavior is supported."}),"\n",(0,i.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,i.jsx)(n.p,{children:"An example of an implementation context where having a constant WebSocket might not be wanted would\nbe Urban IoT devices, or devices with a limited or only periodically available internet\nconnection."})}),"\n",(0,i.jsx)(n.p,{children:"Querying [this endpoint](/APIs/Core/Routes%3A No registration needed/#get-events) yields a JSON array\ncontaining all events the session has missed since last querying the endpoint or since last being\nconnected to the WebSocket."}),"\n",(0,i.jsx)(n.p,{children:"Depending on how many events the session has\nmissed, the earliest events might be excluded from the response to limit the response body's size. This\nbehavior should be explicitly documented in implementations or extensions of polyproto."}),"\n",(0,i.jsx)(n.p,{children:"Due to the intended use cases for retrieving events through REST rather than WebSockets,\nthis endpoint is not a long-polling endpoint."}),"\n",(0,i.jsx)(n.p,{children:"There are three intended, main modes for retrieving events in polyproto"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Keep a constant WebSocket connection whenever possible."}),"\n",(0,i.jsx)(n.li,{children:"Keep a semi-constant WebSocket connection, perhaps connecting every x minutes for a set period of\ntime."}),"\n",(0,i.jsx)(n.li,{children:"Do not use WebSockets and only query the REST API."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Polling a REST endpoint is inherently inefficient and therefore should only be done with a high interval,\nranging from a few minutes to a few days. If a client requires information more often than that,\nthen a WebSocket connection should be considered."}),"\n",(0,i.jsx)(n.h3,{id:"34-http",children:"3.4 HTTP"}),"\n",(0,i.jsx)(n.p,{children:"HTTP/1.1 is the minimum required version that polyproto servers and clients must implement.\nImplementing HTTP/2 and HTTP/3 is strongly recommended for all use cases, as both versions of the\nprotocol introduce significant performance improvements over HTTP/1.1 with HTTP/3 reducing latency\nand improving performance the most, especially over lossy networks."}),"\n",(0,i.jsx)(n.p,{children:"Future versions of the polyproto specification may mandate the implementation of HTTP/2."}),"\n",(0,i.jsx)(n.h3,{id:"35-internet-protocol-ip",children:"3.5 Internet Protocol (IP)"}),"\n",(0,i.jsx)(n.p,{children:"Support for both versions 4 and 6 of the Internet Protocol (IPv4 and IPv6) is mandatory for\npolyproto client and server software. Real-world availability of both versions of the Internet\nProtocol in polyproto should happen on a best-effort basis."}),"\n",(0,i.jsx)(n.admonition,{title:"Explanation",type:"tip",children:(0,i.jsx)(n.p,{children:"We do not mandate that access to a polyproto server must be possible over both IPv4 and IPv6\nas most of the world is not sufficiently IPv6 capable. We do, however, mandate that software\nwritten to support polyproto must be capable of handling traffic over both IPv4 and IPv6, should\nboth versions of the Internet Protocol be available to the software at runtime."})}),"\n",(0,i.jsx)(n.h3,{id:"36-compression",children:"3.6 Compression"}),"\n",(0,i.jsx)(n.admonition,{title:"Unfinished",type:"info",children:(0,i.jsx)(n.p,{children:"As of beta.1 of the polyproto protocol specification, this section is unfinished. Expect this\nsection to receive content in future beta releases of the protocol spec."})}),"\n",(0,i.jsx)(n.admonition,{title:"TODO; Here's a TL;DR:",type:"danger",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"zstd level 5-13 recommended for realtime"}),"\n",(0,i.jsx)(n.li,{children:"higher zstd levels recommended for events such as resumed etc."}),"\n",(0,i.jsx)(n.li,{children:"zstd must be offered on gateway server"}),"\n",(0,i.jsx)(n.li,{children:"zstd must be offered on http api"}),"\n",(0,i.jsx)(n.li,{children:"uncompressed available (but why would you do that)"}),"\n"]})}),"\n",(0,i.jsx)(n.h2,{id:"4-federated-identity",children:"4. Federated identity"}),"\n",(0,i.jsx)(n.p,{children:"The federation of actor identities allows users to engage with foreign servers as if they were their\nhome servers. For example, in polyproto-chat, an actor can send direct messages to users from a\ndifferent server or join the guilds of other servers."}),"\n",(0,i.jsxs)(n.p,{children:["Identity certificates defined in sections ",(0,i.jsx)(n.a,{href:"#6-cryptography-and-id-certs",children:"#6. Cryptography and ID-Certs"}),"\nand ",(0,i.jsx)(n.a,{href:"#61-home-server-signed-certificates-for-public-client-identity-keys-id-cert",children:"#6.1 Home server signed certificates for public client identity keys (ID-Cert)"}),"\nare employed to sign messages that the actor sends to other servers."]}),"\n",(0,i.jsx)(n.admonition,{title:"Using one identity for several polyproto implementations",type:"note",children:(0,i.jsxs)(n.p,{children:["An actor can choose to use the same identity for multiple polyproto implementations. Read\n",(0,i.jsx)(n.a,{href:"#9-services",children:"section #9"})," for more information."]})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["You can read more about identity certificates in ",(0,i.jsx)(n.a,{href:"#6-cryptography-and-id-certs",children:"section #6"}),"."]})}),"\n",(0,i.jsx)(n.h3,{id:"41-authentication",children:"4.1 Authentication"}),"\n",(0,i.jsxs)(n.p,{children:["The core polyproto specification does not contain a strict definition of authentication procedures\nand endpoints for home servers. This allows for a wide range of authentication methods to be used,\nsuch as OIDC or LDAP. To achieve the highest level of interoperability, all polyproto\nimplementations should highly consider implementing the ",(0,i.jsx)(n.a,{href:"/docs/protocols/auth",children:"polyproto-auth"})," standard for\nauthenticating on home servers and foreign servers alike."]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"Close interoperation is only possible if all involved polyproto implementations have an\noverlapping set of supported authentication methods. Therefore, it is highly recommended to implement\nand use the polyproto-auth standard, unless your use case requires a different\nauthentication method. Of course, other authentication methods can be implemented in addition to\npolyproto-auth."})}),"\n",(0,i.jsx)(n.p,{children:"When successfully authenticated, a client receives a session token, which can then be used to\naccess authenticated routes on the REST API and to establish a WebSocket connection. Each ID-Cert\ncan only have one active session token at a time."}),"\n",(0,i.jsx)(n.admonition,{title:"About session tokens",type:"info",children:(0,i.jsx)(n.p,{children:"Session tokens are used to authenticate a user over a longer period of time, instead of for\nexample, requiring the user to solve a challenge string every time they want to access a\nprotected route."})}),"\n",(0,i.jsx)(n.h4,{id:"411-authenticating-on-a-foreign-server",children:"4.1.1 Authenticating on a foreign server"}),"\n",(0,i.jsxs)(n.p,{children:["Regardless of the authentication method used, the foreign server must verify the actor's identity\nbefore allowing them to perform any actions. This verification must be done by proving that the\nactor is in possession of the private key for their ID-Cert, and that the ID-Cert actually belongs\nto the home server that the actor claims. This is done via\n",(0,i.jsx)(n.a,{href:"#43-challenge-strings",children:"a challenge string"})," in the following flow:"]}),"\n",(0,i.jsx)(n.mermaid,{value:'sequenceDiagram\nautonumber\nparticipant HomeserverA as "Homeserver A"\nactor Alice\nparticipant HomeserverB as "Homeserver B"\n\nnote over Alice, HomeserverA: Alice is registered on Homeserver A\n\nAlice->>HomeserverB: GET /.p2/core/v1/session/auth\nHomeserverB->>HomeserverB: Generate challenge & lifetime\n\nHomeserverB--\x3e>Alice: keytrial { challenge, lifetime }\nAlice->>Alice: Sign challenge with private identity key\n\nAlice->>HomeserverB: POST keytrial { signature, federation_id, cert_serial }\nHomeserverB->>HomeserverB: Check request format\n\nHomeserverB->>HomeserverA: GET cert (federation_id, cert_serial)\nHomeserverA->>HomeserverA: Look up certificate & status\n\nHomeserverA--\x3e>HomeserverB: cert, status (valid/invalid)\nHomeserverB->>HomeserverB: Check certificate validity\nHomeserverB->>HomeserverB: Check certificate expiry\nHomeserverB->>HomeserverB: Verify signature\n\nalt Signature and cert valid\n    HomeserverB->>HomeserverB: Generate authentication token\n    HomeserverB->>HomeserverB: Hash and store token in DB\n    HomeserverB--\x3e>Alice: auth token (secret)\n    Alice->>Alice: Store authentication token\n    Alice->>HomeserverB: Use auth token for further requests\n    HomeserverB->>HomeserverB: Validate token for each request\nelse Signature or cert invalid\n    HomeserverB--\x3e>Alice: error (authentication failed)\nend'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Fig. X: Demonstration of authentication on a foreign server."})}),"\n",(0,i.jsxs)(n.p,{children:["Before a foreign actor is allowed to send messages on the server, the server must also check with\nthe actor's home server to ensure that the ID-Cert has not been revoked (steps #9 and #10 in the\ndiagram). See ",(0,i.jsx)(n.a,{href:"#641-verifying-that-a-newly-retrieved-id-cert-is-not-out-of-date",children:"section 6.4.1"})," for\ninformation on how this is done."]}),"\n",(0,i.jsx)(n.h3,{id:"42-sensitive-actions",children:"4.2 Sensitive actions"}),"\n",(0,i.jsx)(n.p,{children:'TODO: Better describe "Sensitive-Solution".'}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsx)(n.p,{children:"Sensitive actions require a second factor of authentication, apart from the actor's\nprivate key. This second factor can be anything from a password to TOTP or hardware keys, depending\non the authentication method or standard used."}),(0,i.jsxs)(n.p,{children:["If this is not done, a malicious user who gained access to an actors' private key can lock that\nactor out of their account entirely, as the malicious user could ",(0,i.jsx)(n.a,{href:"#714-early-revocation-of-id-certs",children:"revoke the actors' other ID-Certs"}),",\nand thus prevent the actor from logging in again."]})]}),"\n",(0,i.jsx)(n.p,{children:"Sensitive actions include, but are not limited to:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Generating a new ID-Cert"}),"\n",(0,i.jsx)(n.li,{children:"Revoking an ID-Cert"}),"\n",(0,i.jsx)(n.li,{children:"Changing the actors' federation ID"}),"\n",(0,i.jsx)(n.li,{children:"Changing the actors' other factors of authentication"}),"\n",(0,i.jsx)(n.li,{children:"Server administration actions"}),"\n",(0,i.jsx)(n.li,{children:"Deleting encrypted private key material from a home server"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["HTTP API routes marked as sensitive actions require a header ",(0,i.jsx)(n.code,{children:"X-P2-Sensitive-Solution"}),", where the\nheader value represents the second factor of authentication chosen."]}),"\n",(0,i.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,i.jsx)(n.p,{children:"If the chosen second factor of authentication is TOTP, the value of this header is the current\nTOTP verification code. If the chosen second factor of authentication is a password, then the\nvalue of this header is to be that password."})}),"\n",(0,i.jsx)(n.h3,{id:"43-challenge-strings",children:"4.3 Challenge strings"}),"\n",(0,i.jsx)(n.p,{children:"Servers use challenge strings to verify an actor's private identity key\npossession without revealing the private key itself. These strings, ranging from 32 to 256\nUTF-8 characters, have a UNIX timestamp lifetime. If the current timestamp surpasses this\nlifetime, the challenge fails. The actor signs the string, sending the signature and their\nID-Cert to the server, which then verifies the signature's authenticity."}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["Challenge strings provide a different set of security guarantees than\n",(0,i.jsx)(n.a,{href:"#42-sensitive-actions",children:"sensitive actions"})," do. They are not to be used interchangeably."]})}),"\n",(0,i.jsxs)(n.p,{children:["All challenge strings and their responses created must be made\npublic to ensure that a chain of trust can be maintained. A third party should be able to verify that\nthe challenge string, which authorized a specific change in data, was signed by the\ncorrect private key. The API routes needed to verify challenges as an outsider are documented in the\n",(0,i.jsx)(n.a,{href:"https://apidocs.polyproto.org",children:"API documentation"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["For public-facing polyproto implementations, it is recommended to use a challenge string length\nof at least 64 characters, including at least one character from each of the alphanumeric\ncharacter classes (",(0,i.jsx)(n.code,{children:"[a-zA-Z0-9]"}),"). Server implementations should ensure that challenge strings\nare unique per actor. If this is not the case, actors could potentially be the target of replay attacks."]})}),"\n",(0,i.jsx)(n.p,{children:"Challenge strings can counteract replay attacks. Their uniqueness ensures that even identical requests\nhave different signatures, preventing malicious servers from successfully replaying requests."}),"\n",(0,i.jsx)(n.p,{children:"Accessing a challenge string protected route is done as follows:"}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\nautonumber\n\nactor a as Client A\nparticipant s as Server\n\nnote over a: Clients have to provide session<br/>token to request challenge string\na->>s: Request challenge string\ns->>s: Note, that Client A requests challenge<br/>string for given session identified by token\ns->>a: Challenge string\na->>a: Complete challenge by signing<br/>string with private key associated<br/>with pubkey of this session\na->>s: Call challenge string protected route with<br/>`X-P2-Challenge-String-Solution` header,<br/>where the value is equal to the challenge string solution\ns->>s: Verify challenge\nalt\n  note over s: Challenge string solution is valid\n  s->>s: Let Client A perform the challenge string protected action\nelse\n  note over s: Challenge string solution is invalid\n  s->>s: Return 403, indicating that<br/>the challenge string solution is invalid,<br/>with optional RetryAfter header to indicate how<br/>long the client should wait before making a<br/>follow-up request.\nend"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Fig. X: Challenge string validation"})}),"\n",(0,i.jsx)(n.h3,{id:"44-protection-against-misuse-by-malicious-home-servers",children:"4.4 Protection against misuse by malicious home servers"}),"\n",(0,i.jsx)(n.p,{children:"To protect users from misuse by malicious home servers, a mechanism is needed to prevent home\nservers from generating federation tokens for users without their consent and knowledge."}),"\n",(0,i.jsx)(n.admonition,{title:"Potential misuse scenario",type:"tip",children:(0,i.jsx)(n.p,{children:"A malicious home server can potentially request a federation token on behalf of one of its\nusers, and use it to generate a session token on the actor's behalf. The malicious server can\nthen impersonate the actor on another server, as well as read unencrypted data (such as messages,\nin the context of a chat application) sent on the other server."})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"The above scenario is not unique to polyproto and rather a problem other federated\nservices/protocols, like ActivityPub, have as well. There is no real solution to this problem.\nHowever, it can be mitigated a bit by making it more difficult for malicious home servers to do\nsomething like this without the actor noticing."})}),"\n",(0,i.jsxs)(n.p,{children:["Polyproto servers need to inform users of new sessions. This visibility hampers malicious home\nservers, but does not solve the issue of them being able to create federation tokens for servers the\nactor does not connect to. This is because, naturally, users cannot receive notifications without a\nconnection. Clients re-establishing server connections must be updated on any new sessions\ngenerated during their absence. The ",(0,i.jsx)(n.code,{children:"NEW_SESSION"})," gateway event must be dispatched to all sessions,\nexcluding the new session. The ",(0,i.jsx)(n.code,{children:"NEW_SESSION"})," event's stored data can be accessed in the\n",(0,i.jsx)(n.a,{href:"https://http.cat/404",children:"Gateway Events documentation"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"With proper safety precautions and strong encryption, it is extremely unlikely for a malicious\nserver to be able to listen in on encrypted conversations, without all users in that conversation\nnoticing. When implementing the polyproto-mls P2 extension, MLS's forward secrecy guarantees ensure\nthat, in theory, a malicious session cannot decrypt any messages sent before its join epoch. If\nsecrecy or confidentiality are of concern, users should host their own home server and use\nend-to-end encryption, such as polyproto-mls."})}),"\n",(0,i.jsx)(n.h2,{id:"5-federation-ids-fids",children:"5. Federation IDs (FIDs)"}),"\n",(0,i.jsx)(n.p,{children:"Every client requires an associated actor identity. Actors are distinguished by a unique federation\nID (FID). FIDs consist of a local name, which is unique per instance, and the instance's root domain.\nThis combination ensures global uniqueness."}),"\n",(0,i.jsxs)(n.p,{children:["FIDs used in public contexts are formatted as ",(0,i.jsx)(n.code,{children:"actor@optionalsubdomain.domain.tld"})," and are case-insensitive."]}),"\n",(0,i.jsx)(n.p,{children:"FIDs consist of the following parts:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Part"}),(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"actor"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)("a",{name:"def-local-name",id:"def-local-name"}),'"Local Name" or "Common Name"']}),(0,i.jsx)(n.td,{children:"Must be unique on each instance."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"@"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)("a",{name:"def-separator",id:"separator"}),'"Separator"']}),(0,i.jsx)(n.td,{children:"Separates local name from domain name"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"optionalsubdomain.domain.tld"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)("a",{name:"def-domain-name",id:"def-domain-name"}),'"Domain Name"']}),(0,i.jsx)(n.td,{children:"Includes top-level domain, second-level domain and other subdomains. Address which the actors' home server can be reached at."})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["The following regular expression can be used to validate actor IDs: ",(0,i.jsx)(n.code,{children:"\\b([a-z0-9._%+-]+)@([a-z0-9-]+(\\.[a-z0-9-]+)*)$"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"The above regular expression is flavored for the Rust programming language, but can be easily\nadapted to other languages."})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Validating a federation ID with the above regex does not guarantee that the ID is valid. It only\nindicates that the federation ID is formatted correctly."})}),"\n",(0,i.jsxs)(n.p,{children:["For all intents and purposes, a federation ID is a display of identity. However, verifying identity\nclaims is crucial. See ",(0,i.jsx)(n.a,{href:"#61-home-server-signed-certificates-for-public-client-identity-keys-id-cert",children:"Section #6.1"}),"\nand ",(0,i.jsx)(n.a,{href:"#621-message-verification",children:"Section #6.2.2"})," for more information."]}),"\n",(0,i.jsx)(n.h2,{id:"6-cryptography-and-id-certs",children:"6. Cryptography and ID-Certs"}),"\n",(0,i.jsx)(n.h3,{id:"61-home-server-signed-certificates-for-public-client-identity-keys-id-cert",children:"6.1 Home server signed certificates for public client identity keys (ID-Cert)"}),"\n",(0,i.jsxs)(n.p,{children:["The ID-Cert, an ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/X.509",children:"X.509"})," certificate, validates a public actor\nidentity key. It is an actor-generated CSR (",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Certificate_signing_request",children:"Certificate Signing Request"}),"),\nsigned by a home server, encompassing actor identity information and the client's public identity key.\nClients can get an ID-Cert in return for a valid and well-formed CSR. Generating a new ID-Cert is\nconsidered a ",(0,i.jsx)(n.a,{href:"#42-sensitive-actions",children:"sensitive action"})," and therefore should require a second factor\nof authentication."]}),"\n",(0,i.jsxs)(n.p,{children:["A CSR in the context of polyproto will be referred to as an ID-CSR. ID-CSRs are DER- or PEM-encoded\n",(0,i.jsx)(n.a,{href:"https://datatracker.ietf.org/doc/html/rfc2986",children:"PKCS #10"})," CSRs, with a few additional requirements."]}),"\n",(0,i.jsx)(n.p,{children:"All ID-Certs are valid X.509 v3 certificates. However, not all X.509 v3 certificates are valid ID-Certs."}),"\n",(0,i.jsx)(n.p,{children:"ID-Certs form the basis of message signing and verification in polyproto.\nThey are used to verify the identity of a client and to verify the integrity of messages sent by a\nclient."}),"\n",(0,i.jsx)(n.p,{children:"An ID-CSR includes the following information, according to the X.509 standard:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The public identity key of the client."}),"\n",(0,i.jsxs)(n.li,{children:["A polyproto Distinguished Name (",(0,i.jsx)(n.code,{children:"pDN"}),') "subject", describing the actor the certificate is\nissued to. The ',(0,i.jsx)(n.code,{children:"pDN"})," must be formatted according to ",(0,i.jsx)(n.a,{href:"#6111-polyproto-distinguished-name-pdn",children:"Section 6.1.1.1"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"The signature algorithm used to sign the certificate."}),"\n",(0,i.jsx)(n.li,{children:"The signature of the certificate, generated by using the entities' private identity key."}),"\n",(0,i.jsxs)(n.li,{children:["A version identifier, specifying the version of X.509 certificate used. See ",(0,i.jsx)(n.a,{href:"#611-structure-of-an-id-cert",children:"chapter 6.1.1"}),"\nfor a specification of what the version field must look like."]}),"\n",(0,i.jsxs)(n.li,{children:["A list of X.509 capabilities which the actor requests for their certificate. See ",(0,i.jsx)(n.a,{href:"#6112-extensions-and-constraints",children:"chapter 6.1.1.2"}),"\nfor a specification of allowed, required and forbidden capabilities."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"When signing an ID-CSR, the home server must verify the correctness of all claims presented in the CSR."}),"\n",(0,i.jsx)(n.admonition,{title:'"Important"',type:"warning",children:(0,i.jsx)(n.p,{children:"All entities receiving an ID-Cert MUST inspect the certificate for correctness and validity.\nThis includes checking whether the signature matches the certificates' contents and checking the\ncertificate's validity period."})}),"\n",(0,i.jsx)(n.p,{children:"Actors must use a separate ID-Cert for each client or session they use. Separating ID-Certs\nlimits the potential damage a compromised ID-Cert can cause."}),"\n",(0,i.jsxs)(n.p,{children:["For two implementations of polyproto to be interoperable, they must support an overlapping set of\ndigital signature algorithms. See ",(0,i.jsx)(n.a,{href:"#65-cryptographic-specifications",children:"Section 6.5"})," for more\ninformation on cryptographic specifications."]}),"\n",(0,i.jsx)(n.h4,{id:"611-structure-of-an-id-cert",children:"6.1.1 Structure of an ID-Cert"}),"\n",(0,i.jsxs)(n.p,{children:["The ID-Cert is a valid X.509 certificate, and as such, it has a specific structure. The structure of\nan X.509 certificate is defined in ",(0,i.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc5280",children:"RFC5280"}),".\nID-Certs encompass a subset of the structure of an X.509 certificate."]}),"\n",(0,i.jsx)(n.p,{children:"ID-Certs have the following structure:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field Description"}),(0,i.jsx)(n.th,{children:"Special requirements, if any"}),(0,i.jsx)(n.th,{children:"X.509 equivalent"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:["Correctly formatted Name attribute, according to ",(0,i.jsx)(n.a,{href:"#6111-polyproto-distinguished-name-pdn",children:"#6.1.1.1"})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#6111-polyproto-distinguished-name-pdn",children:"polyproto Distinguished Name"})}),(0,i.jsx)(n.td,{children:"Issuer Name"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:["Correctly formatted Name attribute, according to ",(0,i.jsx)(n.a,{href:"#6111-polyproto-distinguished-name-pdn",children:"#6.1.1.1"})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#6111-polyproto-distinguished-name-pdn",children:"polyproto Distinguished Name"})}),(0,i.jsx)(n.td,{children:"Subject Name"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"A unique, numeric identifier for the certificate, used by the CA to identify this certificate."}),(0,i.jsx)(n.td,{children:"Must be unique across all certificates issued by a home server."}),(0,i.jsx)(n.td,{children:"Serial Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"The algorithm used to sign the certificate."}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Certificate Signature Algorithm & Signature Algorithm ID"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"The signature of the certificate, generated by using the home servers' private identity key."}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Certificate Signature"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"The expiry date of the certificate."}),(0,i.jsx)(n.td,{children:"Time must not be after expiry date of the home server's root certificate"}),(0,i.jsx)(n.td,{children:"Validity period: Not After"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Certificate validity period starting date"}),(0,i.jsx)(n.td,{children:"Time must not be before the home server's root certificate was generated"}),(0,i.jsx)(n.td,{children:"Validity period: Not Before"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"X.509 Version Number (v3)"}),(0,i.jsx)(n.td,{children:"polyproto only uses Version 3 X.509 certificates."}),(0,i.jsx)(n.td,{children:"Version Number"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"The public identity key of the client."}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Subject Public Key Info: Subject Public Key"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"The public key algorithm used to generate the client's public identity key."}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"Subject Public Key Info: Public Key Algorithm"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"The session ID of the client."}),(0,i.jsx)(n.td,{children:"No two valid certificates for one session ID can exist. Session IDs have to be unique per actor."}),(0,i.jsx)(n.td,{children:"Subject Unique Identifier"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Extensions"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#6112-extensions-and-constraints",children:"Extensions and Constraints"})}),(0,i.jsx)(n.td,{children:"Extensions"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["The domain components (",(0,i.jsx)(n.code,{children:"dc"}),') in the "issuer" and "subject" fields must be equal and in the same order.\nA certificate may not be treated as valid otherwise. X.509 semantics describing the correct ordering\nof domain components apply.']}),"\n",(0,i.jsxs)(n.h5,{id:"6111-polyproto-distinguished-name-pdn",children:["6.1.1.1 polyproto Distinguished Name (",(0,i.jsx)(n.code,{children:"pDN"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["polyproto Distinguished Names (",(0,i.jsx)(n.code,{children:"pDNs"}),") are a subset of an X.509 certificate's ",(0,i.jsxs)(n.a,{href:"https://ldap.com/ldap-dns-and-rdns/",children:["distinguished\nNames (",(0,i.jsx)(n.code,{children:"DNs"}),")"]}),", defined by the LDAP Data Interchange Format (LDIF).\nThe ",(0,i.jsx)(n.code,{children:"DN"})," is a sequence of ",(0,i.jsxs)(n.a,{href:"https://ldap.com/ldap-dns-and-rdns/",children:["relative distinguished names (",(0,i.jsx)(n.code,{children:"RDNs"}),")"]}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"pDN"})," must meet all the following requirements:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If the ",(0,i.jsx)(n.code,{children:"pDN"}),' describes an actor, it must have a "common name" attribute. The\ncommon name must be the ',(0,i.jsx)(n.a,{href:"#5-federation-ids-fids",children:"local name"})," of the actor. In the case of an actor\nwith an FID of ",(0,i.jsx)(n.code,{children:"xenia@example.com"}),", the local name would be ",(0,i.jsx)(n.code,{children:"xenia"}),". If the ",(0,i.jsx)(n.code,{children:"pDN"}),' describes a\nhome server, the "common name" attribute must not be present.']}),"\n",(0,i.jsxs)(n.li,{children:["Must have at least one domain component ",(0,i.jsx)(n.code,{children:"dc"}),", specifying the domain name under which the home\nserver can be reached. This includes the home server's top- and second-level domains, as well as\nall other subdomains, if present. If the home server does not have a sub- or top-level domain, the\n",(0,i.jsx)(n.code,{children:"dc"})," fields for these components should be omitted."]}),"\n",(0,i.jsxs)(n.li,{children:["If the ",(0,i.jsx)(n.code,{children:"pDN"})," describes an actor, the ",(0,i.jsx)(n.code,{children:"pDN"})," must include the ",(0,i.jsx)(n.code,{children:"UID"}),"\n(",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Object_identifier",children:"OID"})," 0.9.2342.19200300.100.1.1) ",(0,i.jsx)(n.strong,{children:"and"}),"\n",(0,i.jsx)(n.code,{children:"uniqueIdentifier"})," (",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Object_identifier",children:"OID"})," 0.9.2342.19200300.100.1.44)\nfields.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"UID"})," field must be equal to the federation ID of the actor, e.g., ",(0,i.jsx)(n.code,{children:"actor@domainname-of-home server.example.com"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"uniqueIdentifier"})," field must be a ",(0,i.jsx)(n.a,{href:"#6113-session-ids",children:"Session ID"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Can have other attributes if the additional attributes do not conflict with the above\nrequirements. Additional attributes might be ignored by other home servers and other clients unless\nspecified otherwise in a polyproto extension. Additional attributes not part of a polyproto\nextension must be non-critical X.509 extensions."}),"\n"]}),"\n",(0,i.jsx)(n.h5,{id:"6112-extensions-and-constraints",children:"6.1.1.2 Extensions and constraints"}),"\n",(0,i.jsx)(n.p,{children:"The following constraints must be met by ID-Certs:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If the ID-Cert is a root certificate","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["It must have the ",(0,i.jsx)(n.code,{children:"CA"})," flag set to ",(0,i.jsx)(n.code,{children:"true"}),". The path length constraint must be present and set\nto ",(0,i.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["It must have the ",(0,i.jsx)(n.code,{children:"keyCertSign"})," key usage flag set to ",(0,i.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["If the ID-Cert is an actor certificate","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["It must have the ",(0,i.jsx)(n.code,{children:"CA"})," flag set to ",(0,i.jsx)(n.code,{children:"false"})," or omitted."]}),"\n",(0,i.jsxs)(n.li,{children:["It must have the ",(0,i.jsx)(n.code,{children:"keyCertSign"})," key usage flag set to ",(0,i.jsx)(n.code,{children:"false"})," or omitted."]}),"\n",(0,i.jsxs)(n.li,{children:["It must have the ",(0,i.jsx)(n.code,{children:"digitalSignature"})," key usage flag OR ",(0,i.jsx)(n.code,{children:"contentCommitment"})," flags set to ",(0,i.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://cryptography.io/en/latest/x509/reference/#cryptography.x509.KeyUsage",children:"Key Usage Flags"})," and\n",(0,i.jsx)(n.a,{href:"https://cryptography.io/en/latest/x509/reference/#cryptography.x509.BasicConstraints",children:"Basic Constraints"}),'\nare critical extensions. Therefore, if any of these X.509 extensions are present, they must be marked\nas "critical." ID-Certs not adhering to this standard must be treated as malformed.']}),"\n",(0,i.jsx)(n.h5,{id:"6113-session-ids",children:"6.1.1.3 Session IDs"}),"\n",(0,i.jsxs)(n.p,{children:["The session ID is an ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/ASN.1",children:(0,i.jsx)(n.code,{children:"ASN.1"})})," ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/IA5STRING",children:(0,i.jsx)(n.code,{children:"Ia5String"})}),"\nchosen by the actor requesting the ID-Cert. It is used to uniquely identify a session. The session\nID must be unique for each certificate issued to that actor. A session ID can be reused if the\nsession belonging to that session ID has become invalid. Session ID reuse in this case also applies\nwhen a different ID-Cert wants to use the same session ID, provided that the session ID is not currently\nin use. If the session ID is currently in use, the actor requesting the ID-Cert must select a different\nsession ID, as session IDs must not be overridden silently."]}),"\n",(0,i.jsxs)(n.p,{children:["Session IDs are 1-32 characters long and. They can contain any character permitted by the ",(0,i.jsx)(n.code,{children:"ASN.1"}),"\n",(0,i.jsx)(n.code,{children:"IA5String"})," type."]}),"\n",(0,i.jsx)(n.p,{children:"Session IDs can be used to identify a session across devices or to detect if a new, perhaps\nmalicious session has been created."}),"\n",(0,i.jsx)(n.h4,{id:"612-necessity-of-id-certs",children:"6.1.2 Necessity of ID-Certs"}),"\n",(0,i.jsx)(n.p,{children:"The addition of a certificate is necessary to prevent a malicious foreign server from abusing public\nidentity key caching to impersonate an actor. Consider the following example, which employs foreign\nserver public identity key caching but no home server-issued identity key certificates:"}),"\n",(0,i.jsx)(n.admonition,{title:"Potential misuse scenario",type:"tip",children:(0,i.jsx)(n.p,{children:"A malicious foreign server B can fake a message from Alice.\n(Home server: Server A) to Bob (Home Server: Server B), by generating a new identity key pair\nand using it to sign the malicious message. The foreign server then sends that message to Bob,\nwho will then request Alice's public identity key from Server B, who will then send Bob the\nmalicious public identity key. Bob will succeed in verifying the signature of the message, and\nnot notice that the message has been crafted by a malicious server."})}),"\n",(0,i.jsx)(n.p,{children:"The above scenario is not possible with home server-issued identity key certificates, as the\nmalicious server cannot generate an identity key pair for Alice, which is signed by Server A."}),"\n",(0,i.jsx)(n.h4,{id:"613-key-rotation",children:"6.1.3 Key rotation"}),"\n",(0,i.jsxs)(n.p,{children:["A session can choose to regenerate their ID-Cert at any time. This is done by taking an identity key\npair, using the private key to generate a new CSR, and sending the new Certificate Signing Request\nto the home server. The home server will then generate the new ID-Cert, given that the CSR is valid.\nActors can only regenerate ID-Certs for their current session, identified by their session ID and\nsession token. Other sessions can only be invalidated by\n",(0,i.jsx)(n.a,{href:"#614-early-revocation-of-id-certs",children:"revoking them"}),". Re-generating an ID-Cert is a\n",(0,i.jsx)(n.a,{href:"#42-sensitive-actions",children:"sensitive action"}),", performed by using the appropriate API route."]}),"\n",(0,i.jsx)(n.p,{children:"Home servers must keep track of the ID-Certs of all users (and their clients) registered on them\nand must offer a clients' ID-Cert for a given timestamp on request. This is to ensure messages\nsent by users, even ones sent a long time ago, can be verified by other servers and their users.\nThis is because the public key of an actor likely changes over time, and users must sign all messages\nthey send to servers."}),"\n",(0,i.jsxs)(n.p,{children:["Users must hold on to all of their past key pairs, as they might need them to\n",(0,i.jsx)(n.a,{href:"#7-migrations",children:"migrate their account in the future"}),". How this is done is specified in\n",(0,i.jsx)(n.a,{href:"#63-private-key-loss-prevention-and-private-key-recovery",children:"section 6.3: Private key loss prevention and private key recovery"}),"."]}),"\n",(0,i.jsx)(n.p,{children:'The lifetime of an actor ID-Cert should be limited to a maximum of 60 days. This is to ensure that even\nin a worst-case scenario, a compromised ID-Cert can only be used for a limited amount of time. "Renewing"\nan ID-Cert consists of:'}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Revoking the old ID-Cert"}),"\n",(0,i.jsxs)(n.li,{children:["Requesting a new ID-Cert with the same ",(0,i.jsx)(n.a,{href:"#6113-session-ids",children:"session ID"})," as the old ID-Cert."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"A client that has this second factor of authentication stored\nshould renew the ID-Cert of the authenticated actor without further interaction."}),"\n",(0,i.jsx)(n.p,{children:"Server ID-Certs should be rotated way less often (every 1-3 years). Only rotate a server ID-Cert\nif it is suspected to be compromised, is lost, or has expired."}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\nautonumber\n\nactor c as Client\nparticipant s as Server\n\nc->>c: Create CSR for own identity key\nc->>s: Request key rotation/CSR signing, CSR attached\ns->>s: Verify validity of claims presented in the CSR\nalt verify success\n  s->>s: Create ID-Cert for Client\n  s->>c: Respond with ID-Cert\nend"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Fig. 2: Sequence diagram depicting the process of a client that uses a CSR to request a new ID-Cert\nfrom their home server."})}),"\n",(0,i.jsxs)(n.p,{children:["A server identity key's lifetime might come to an early or unexpected end, perhaps due to some sort\nof leak of the corresponding private key. When this happens, the server should generate a new\nidentity key pair and broadcast the\n",(0,i.jsx)(n.a,{href:"https://http.cat/404",children:(0,i.jsx)(n.code,{children:"SERVER_KEY_CHANGE"})})," gateway event\nto all clients. Clients must request new ID-Certs through a CSR. Should a client be offline at the time\nof the key change, it must be informed of the change upon reconnection."]}),"\n",(0,i.jsx)(n.h4,{id:"614-early-revocation-of-id-certs",children:"6.1.4 Early revocation of ID-Certs"}),"\n",(0,i.jsxs)(n.admonition,{title:"A note about CRLs",type:"note",children:[(0,i.jsx)(n.p,{children:"It is common for systems relying on X.509 certificates for user authentication to use Certificate\nRevocation Lists (CRLs) to keep track of which certificates are no longer valid. This is done to\nprevent a user from using a certificate that has been revoked."}),(0,i.jsx)(n.p,{children:"CRLs are difficult to implement well, often requiring many resources to keep up to date, and\nare also not always reliable. OCSP (Online Certificate Status Protocol) is a more modern, reliable\nand easier to implement alternative. Still, it potentially requires many resources to\nkeep up with demand while introducing potential privacy concerns."}),(0,i.jsx)(n.p,{children:"polyproto inherently mitigates some of the possible misuse of a revoked certificate, as the validity\nof a certificate is usually checked by many parties. In particular, the revocation process is\ninitiated by the actor themselves, the actor already lets all servers they are connected to know\nthat the certificate in question is no longer valid."}),(0,i.jsx)(n.p,{children:"polyproto does not require the use of CRLs or OCSP."})]}),"\n",(0,i.jsx)(n.p,{children:"An ID-Cert can be revoked by the home server or the actor at any time. This can be done for various\nreasons, such as"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"a suspected leak of the private identity key"}),"\n",(0,i.jsx)(n.li,{children:"the changing of an actor's federation identifier."}),"\n",(0,i.jsx)(n.li,{children:"the changing of an actor's federation identifier."}),"\n",(0,i.jsx)(n.li,{children:"keeping the number of ID-Certs associated with an actor within a desired boundary"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["When an ID-Cert is revoked, the server must revoke the session associated with the revoked ID-Cert.\nRevoking an ID-Cert is considered a ",(0,i.jsx)(n.a,{href:"#42-sensitive-actions",children:"sensitive action"})," and therefore should\nrequire a second factor of authentication."]}),"\n","\n",(0,i.jsx)(n.p,{children:':::bug "TODO"'}),"\n",(0,i.jsx)(n.p,{children:"The following questions are still open:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Should actors always be able to revoke the ID-Cert they are sending the revocation message with\nwithout needing to complete a sensitive action?","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Currently, I cannot see any reason that would speak against this."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["How can actors remain in control of their keys? If revocations need to be signed by the server,\nthen the server has more authority over keys than the actor does","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Revocations should likely never have to be signed by the server. Either that, or it does,\nbut the ",(0,i.jsx)(n.a,{href:"#2-trust-model",children:"trust model assumptions"})," apply."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:":::"}),"\n",(0,i.jsxs)(n.p,{children:["If the ID-Cert revocation was initiated by an actor, that actor must inform other servers of this\nrevocation ",(0,i.jsx)(n.strong,{children:"before"})," sending further messages to those servers."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"The above paragraph is true for both foreign and home servers. The API routes associated with\nrevoking an ID-Cert are the same regardless of the server type."})}),"\n",(0,i.jsx)(n.admonition,{title:"Revocation detection",type:"info",children:(0,i.jsxs)(n.p,{children:["For information on how revocation detection is supposed to be handled, see ",(0,i.jsx)(n.a,{href:"#64-caching-of-id-certs",children:"section 6.4"}),"."]})}),"\n",(0,i.jsx)(n.h3,{id:"62-actor-identity-keys-and-message-signing",children:"6.2 Actor identity keys and message signing"}),"\n",(0,i.jsxs)(n.p,{children:["As briefly mentioned in section ",(0,i.jsx)(n.a,{href:"#4-federated-identity",children:"#4"}),", users must hold on to an identity key pair\nat all times. This key pair is used to represent an actor's identity and to verify\nmessage integrity by having an actor sign all messages they send with their\nprivate identity key. The key pair is generated by the actor. An actor-generated identity key\ncertificate signing request (CSR) is sent to the actor's home server when first connecting to the\nserver with a new session or when rotating keys. The key is stored in the client's local storage.\nUpon receiving a new identity key CSR, a home server will sign this CSR and send the resulting ID-Cert\nto the client. This certificate is proof that the home server attests to the client's key. Read\n",(0,i.jsx)(n.a,{href:"#61-home-server-signed-certificates-for-public-client-identity-keys-id-cert",children:"section 6.1"})," for more\ninformation about the certificate."]}),"\n",(0,i.jsx)(n.p,{children:"The private key from the key pair that the server has generated an ID-Cert for will be used to create\ndigital signatures for the contents of all messages sent by this session. This digital signature must\nbe attached to the message itself so that other actors can verify the integrity of the message\ncontents."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"polyproto does not define what messages themselves look like, apart from this hard requirement.\nThe format of a message is up to polyproto extensions and implementations to define."})}),"\n",(0,i.jsx)(n.h4,{id:"621-message-verification",children:"6.2.1 Message verification"}),"\n",(0,i.jsx)(n.p,{children:"To ensure message integrity through signing, clients and servers must verify\nmessage signatures. This involves cross-checking the message signature against the sender's\nID-Cert and the sender's home server's ID-Cert while also confirming the validity of the\nID-Cert attached to the message and ensuring its public key matches the sender's."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:['Signature verification must always be "strict," meaning that signature schemes producing malleable\nsignatures and ',(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Weak_key",children:"weak public keys"})," must be rejected."]})}),"\n",(0,i.jsxs)(n.admonition,{title:"Example",type:"tip",children:[(0,i.jsxs)(n.p,{children:["Say we have two actors. Alice, who is registered on Server A, and Bob, who is registered\non Server B. Alice and Bob ",(0,i.jsx)(n.strong,{children:"are having a conversation on Server B"}),". Given a signed message from\nAlice, such as Bob would receive from Server B, the process of verifying the signature would look\nlike this:"]}),(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\nautonumber\n\nactor b as Bob\nparticipant sb as Server B\nparticipant sa as Server A\n\nsb->>b: Alice's signed message\nopt Server A's ID-Cert is not cached on Bob's client\n    b->>sa: Request Server A ID-Cert\n    sa->>b: Server A ID-Cert\nend\nopt Alice's ID-Cert is not cached on Bob's client\n    b->>sb: Request Alice's ID-Cert\n    opt Alice's ID-Cert is not cached on Server B\n    sb->>sa: Request Alice's ID-Cert\n    sa->>sb: Alice's ID-Cert\n    end\n    sb->>b: Alice's ID-Cert\nend\nb->>b: Verify signature of Alice's message (Fig. 4)"}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Fig. 3: Sequence diagram of a successful message signature verification."})})]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["You should read about the details of ID-Cert lookup load distribution via caching and why\nBob should first try to request Alice's certificate from Server B instead of Alice's home\nserver (Server A) in the ",(0,i.jsx)(n.a,{href:"#64-caching-of-id-certs",children:"corresponding section of this protocol specification"}),".\nUnderstanding both sections is crucial for building secure, scalable, and compliant\nimplementations of polyproto."]})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"A failed signature verification does not always mean that the message is invalid. It may be that\nthe actor's identity key has changed, and that Server B has not yet received the new public\nidentity key for some reason. However, if the signature cannot be verified at a certain time,\nthis information must be communicated to the actor performing the verification."})}),"\n",(0,i.jsx)(n.h4,{id:"622-handling-of-external-messages",children:"6.2.2 Handling of external messages"}),"\n",(0,i.jsx)(n.p,{children:"In the context of federation with other federation protocols, such as ActivityPub, it is possible\nfor actors to receive messages that do not have a signature attached to them. If a P2 extension\nexplicitly allows for this, it is possible for a polyproto server to forward such messages to\nclients. If a P2 extension does not explicitly allow for this, both servers and clients must\nreject such messages."}),"\n",(0,i.jsxs)(n.p,{children:['Before a polyproto server forwards such a message to clients, it must add an "external" property to\nthe message object. If possible in the data format used, this property should be set to a boolean\nvalue of ',(0,i.jsx)(n.code,{children:"true"})," or a value that can be interpreted in an equivalent manner.\nThis property must be passed along to the client or clients receiving the message."]}),"\n",(0,i.jsx)(n.p,{children:"If the actor receiving this external message is human or otherwise sentient, the client application\nshould inform the actor that the message is external and that the message has not been signed by\nthe sender. External messages should be distinguishable from signed messages at first glance, especially\nwhen viewed through a client application."}),"\n",(0,i.jsx)(n.h3,{id:"63-private-key-loss-prevention-and-private-key-recovery",children:"6.3 Private key loss prevention and private key recovery"}),"\n",(0,i.jsx)(n.p,{children:"As described in previous sections, actors must hold on to their past identity key pairs, should they\nwant or need to migrate their account."}),"\n",(0,i.jsx)(n.p,{children:"Home servers must offer a way for actors to upload and recover their private identity keys while not\nhaving access to the private keys themselves. Private identity keys must be encrypted with\nstrong passphrases and encryption schemes such as AES before being uploaded to the server.\nAuthenticated actors can download their encrypted private identity keys from the server at any time.\nAll encryption and decryption operations must be done client-side."}),"\n",(0,i.jsx)(n.p,{children:"If any uncertainty about the availability of the home server exists, clients should regularly\ndownload their encrypted private identity keys from the server and store them in a secure location.\nIdeally, each client should immediately download their encrypted private identity keys from the\nserver after connecting. Clients must never store key backups in an unencrypted manner."}),"\n",(0,i.jsx)(n.p,{children:"Whether an actor uploads their encrypted private identity keys to the server is their own choice.\nIt is also recommended to back up the encrypted private identity keys in some other secure location."}),"\n",(0,i.jsxs)(n.p,{children:["The APIs for managing encrypted private identity keys are documented in the\n",(0,i.jsx)(n.a,{href:"https://apidocs.polyproto.org",children:"API documentation"}),"."]}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsxs)(n.p,{children:["Actors can make use of the ",(0,i.jsx)(n.a,{href:"#7-migrations",children:"migration APIs"})," to reduce the number of ID-Certs/keys\nthat they must hold on to to migrate their account in the future."]}),(0,i.jsxs)(n.p,{children:["For example, if an actor currently has messages signed with 20 different ID-Certs but only uses\n2 clients (meaning that the actor always needs two active ID-Certs\u2014one for each client),\nthe 18 outdated/unused ID-Certs could be consolidated into one ID-Cert through ",(0,i.jsx)(n.a,{href:"#72-re-signing-messages",children:"re-signing the messages"}),"\nmade with the outdated ID-Certs with any other ID-Cert."]}),(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsx)(n.p,{children:"This drastically reduces the number of ID-Certs the actor needs to keep track of and hold on\nto, which may make re-signing messages in the future easier."}),(0,i.jsxs)(n.p,{children:["However, doing this also introduces additional risks, as the overwhelming majority of the\nactor's message history is now associated with one ID-Cert. ",(0,i.jsx)(n.strong,{children:"An accidental leak of the\nprivate identity key of that ID-Cert could likely not be recovered from,"})," since all associated\nmessages are potentially under control by those who know the private identity key."]}),(0,i.jsx)(n.p,{children:'Actors and polyproto software developers must keep this information in mind, should\nconsider whether the risks and benefits of this strategy are worth it for their use case and\ncan introduce additional strategies to manage the number of "relevant" private keys safely.'})]})]}),"\n",(0,i.jsx)(n.h3,{id:"64-caching-of-id-certs",children:"6.4 Caching of ID-Certs"}),"\n",(0,i.jsx)(n.p,{children:"The caching of ID-Certs is an important mechanism in polyproto to aid in fairly distributing the load\ngenerated by ID-Cert lookups to the servers generating the traffic, not to the server the ID-Cert\nis actually from. This practice should help make the operation of low-resource home servers, used\nexclusively for hosting identities, more viable."}),"\n",(0,i.jsx)(n.p,{children:"This section of the protocol definition defines required behaviors related to the correct caching\nof ID-Certs for both home servers and clients."}),"\n",(0,i.jsx)(n.p,{children:"To make this section more understandable, we will bring back the example from section 6.2.1:"}),"\n",(0,i.jsxs)(n.admonition,{title:"Revisiting the example scenario from section 6.2.1",type:"note",children:[(0,i.jsxs)(n.admonition,{title:"Example",type:"tip",children:[(0,i.jsxs)(n.p,{children:["Say we have two actors. Alice, who is registered on Server A, and Bob, who is registered\non Server B. Alice and Bob ",(0,i.jsx)(n.strong,{children:"are having a conversation on Server B"}),". Given a signed message\nfrom Alice, such as Bob would receive from Server B, the process of verifying the signature\nwould look like this:"]}),(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\nautonumber\n\nactor b as Bob\nparticipant sb as Server B\nparticipant sa as Server A\n\nsb->>b: Alice's signed message\nopt Server A's ID-Cert is not cached on Bob's client\n    b->>sa: Request Server A ID-Cert\n    sa->>b: Server A ID-Cert\nend\nopt Alice's ID-Cert is not cached on Bob's client\n    b->>sb: Request Alice's ID-Cert\n    opt Alice's ID-Cert is not cached on Server B\n    sb->>sa: Request Alice's ID-Cert\n    sa->>sb: Alice's ID-Cert\n    end\n    sb->>b: Alice's ID-Cert\nend\nb->>b: Verify signature of Alice's message (Fig. 4)"}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Fig. 3: Sequence diagram of a successful message signature verification."})})]}),(0,i.jsxs)(n.p,{children:["In the case where ",(0,i.jsx)(n.code,{children:"alice@server-a.example.com"})," and ",(0,i.jsx)(n.code,{children:"bob@server-b.example.com"})," are having a\nconversation where the communications server is any server other than ",(0,i.jsx)(n.code,{children:"server-a.example.com"}),",\nBob should request Alice's ID-Cert from that server first, instead of from ",(0,i.jsx)(n.code,{children:"server-a.example.com"}),"."]})]}),"\n",(0,i.jsxs)(n.admonition,{title:"Further notes on why we consider this cached distribution process a good idea",type:"note",children:[(0,i.jsx)(n.p,{children:"Bob's client could request Alice's public identity key from Server A, instead of Server B.\nHowever, this is discouraged, as it"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Generates unnecessary load on Server A; Doing it this way distributes the load of public\nidentity key requests more fairly, as the server that the message was sent on is the one that\nhas to process the bulk of public identity certificate requests."}),"\n",(0,i.jsx)(n.li,{children:"Would expose unnecessary metadata to Server A; Server A does not need to know who exactly\nAlice is talking to, and when. Only Server B, Alice, and Bob need to know this information.\nAlways requesting the public identity key from Server A might expose this information to\nServer A."}),"\n"]}),(0,i.jsx)(n.p,{children:"Clients should only use Server A as a fallback for public identity key verification if Server B\ndoes not respond to the request for Alice's public identity key, or if the verification fails\nwith the public identity key from Server B. Security considerations listed in this section of\nthe protocol definition ensure that this cached distribution process is safe and trustworthy."})]}),"\n",(0,i.jsx)(n.p,{children:"Both Bob's client and Server B should now cache Server A's and Alice's ID-Certs to avoid having to\nrequest them again."}),"\n",(0,i.jsxs)(n.p,{children:["The TTL (time to live) of these cached items should be relatively short. Recommended values\nare between one (1) and twelve (12) hours. Cached ID-Certs must be evicted from\nthe cache after the TTL has expired. Expired cached ID-Certs must not be used for signature\nverification of new messages, even if the client cannot renew its cache. All of this applies to both\nservers and clients. The TTL for a certificate's cache duration is dictated by the home server\nthat certificate has been issued by. You can read more on that in\n",(0,i.jsx)(n.a,{href:"#641-verifying-that-a-newly-retrieved-id-cert-is-not-out-of-date",children:"subsection 1 of this section"}),"."]}),"\n",(0,i.jsxs)(n.div,{children:[(0,i.jsx)(n.p,{children:"Why not select longer-lived TTLs for cached ID-Certs?"}),(0,i.jsx)(n.p,{children:'Suppose that an actor\'s private identity key is compromised. The actor notices this and revokes\ntheir ID-Cert. If the TTL of cached ID-Certs is too long, the compromised ID-Cert might still be\nused for signature verification for a long amount of time, even after the ID-Cert has been revoked.\nThis is a problem in the following hypothetical scenario with the malicious actor "Eve" and the\nvictim "Alice":'}),(0,i.jsx)(n.admonition,{title:"Downside of using higher values for a TTL",type:"tip",children:(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"One of Alice's private identity keys is compromised."}),"\n",(0,i.jsx)(n.li,{children:"Malicious actor Eve logs onto Server X, which Alice has never connected to before, using\nAlice's ID-Cert, of which the corresponding private identity key has been compromised."}),"\n",(0,i.jsx)(n.li,{children:"In the meantime, Alice notices the breach, requesting the revocation of her ID-Cert on\nall servers she is connected to."}),"\n",(0,i.jsx)(n.li,{children:"Server X does not get this revocation message, as Alice does not know about her connection\nto Server X, where Eve is impersonating Alice."}),"\n",(0,i.jsx)(n.li,{children:"Eve can now impersonate Alice on Server X for as long as the TTL of the cached ID-Cert on\nServer X has not expired. With a high value, this could be a long time."}),"\n"]})})]}),"\n",(0,i.jsx)(n.p,{children:"If the verification fails, Bob's client should try to re-request the key from Server B first.\nShould the verification fail again, Bob's client can try to request Alice's public identity key\nand ID-Cert from Server A (Alice's home server). The signature verification process should then be\nretried. Should the verification still not succeed, the message should be treated with extreme\ncaution."}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\nautonumber\n\nactor b as Bob\nparticipant sb as Server B\nparticipant sa as Server A\n\nb->>b: Verify signature of Alice's message, attempt 1\nalt Verification fails or ID-Cert is out of date\n  b->>sb: Request Alice's ID-Cert\n  sb->>b: Alice's ID-Cert\n  b->>b: Check that the received ID-Cert is up-to-date, as defined in section 6.4.1\n  b->>b: Verify signature of Alice's message, attempt 2\n  opt Verification fails again or ID-Cert is out of date\n    b->>sa: Request Alice's ID-Cert\n    sa->>b: Alice's ID-Cert\n    b->>b: Check that the received ID-Cert is up-to-date, as defined in section 6.4.1\n    b->>b: Verify signature of Alice's message, final attempt\n    opt Verification is still unsuccessful or ID-Cert is still out of date\n      b--\x3eb: Treat Alice's message with extreme caution.\n    end\n  end\nelse Verification succeeds\n  b--\x3eb: Treat Alice's message as verified.\nend"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:'Fig. 4: Sequence diagram showing how message verification should be handled if the first attempt\nto verify the signature fails, continuing the example of a conversation happening on a server\n"B" between Bob from a random server and Alice from server A'})}),"\n",(0,i.jsx)(n.p,{children:"After evicting a cached ID-Cert:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A client should request an up-to-date ID-Cert of the target actor from the server where the actor\nwas last seen by the client."}),"\n",(0,i.jsx)(n.li,{children:"A server should request an up-to-date ID-Cert from the target actor's home server."}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["It is ",(0,i.jsx)(n.em,{children:"not"})," of vital importance that a client requests an ID-Cert of an actor whose ID-Cert has\njust been evicted from the cache from the server, where the actor was last seen by the client\n",(0,i.jsx)(n.em,{children:"precisely"}),". This means that a client application doesn't necessarily need to update an internal\nstate of where that actor has last been seen every single time that actor sends a message somewhere.\nThis internal state update could instead happen every 5, 30, or even 60 seconds. What ",(0,i.jsx)(n.em,{children:"is"}),"\nimportant, however, is that this state update does eventually happen within a reasonable amount\nof time, to help achieve the goal of dynamic server load distribution."]})}),"\n",(0,i.jsx)(n.h4,{id:"641-verifying-that-a-newly-retrieved-id-cert-is-not-out-of-date",children:"6.4.1 Verifying that a newly retrieved ID-Cert is not out of date"}),"\n",(0,i.jsxs)(n.p,{children:["While the goal of achieving dynamic server load distribution to increase the viability of small,\nlow-resource home servers is a noble one, this goal must not undermine ",(0,i.jsx)(n.a,{href:"#2-trust-model",children:"P2s trust model"}),",\nwhich other aspects of the protocol work very hard to uphold. Retrieving ID-Certs from a middleman\nintroduces a new attack surface that must be mitigated. Consider the following example:"]}),"\n",(0,i.jsx)(n.admonition,{title:"Example attack abusing blind middleman trust",type:"tip",children:(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"One of Alice's private identity keys is compromised."}),"\n",(0,i.jsx)(n.li,{children:"Malicious actor Eve logs onto a malicious Server X, which is controlled by Eve, impersonating\nAlice by using Alice's ID-Cert, of which the corresponding private identity key has been compromised."}),"\n",(0,i.jsx)(n.li,{children:"In the meantime, Alice notices the breach, requesting the revocation of her ID-Cert on\nall servers she is connected to."}),"\n",(0,i.jsx)(n.li,{children:"Server X does not care for this revocation message, as it is malicious (attacker controlled)."}),"\n",(0,i.jsx)(n.li,{children:"Eventually, the TTL for this compromised certificate expires. Users on Server X contact the\nserver for the latest certificate of Alice."}),"\n",(0,i.jsx)(n.li,{children:"Server X responds with the compromised ID-Cert, claiming that this is the most up-to-date\nID-Cert, even though it has been revoked."}),"\n",(0,i.jsx)(n.li,{children:"Through all users trusting Server X blindly, Eve and Server X can impersonate Alice for as\nlong as Alice's compromised ID-Cert would have been valid for (valid-not-after attribute in X.509\ncertificates). Until then, users do not notice that this certificate has been revoked and\nshould no longer be valid."}),"\n"]})}),"\n",(0,i.jsx)(n.p,{children:"This kind of attack mentioned above has been considered and mitigated in polyproto. This mitigation\nis achieved through API behaviors enabling the fetching of actor ID-Certs with additional information\nattached to the response body. The additional information is structured as follows:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field name"}),(0,i.jsx)(n.th,{children:"JSON type"}),(0,i.jsx)(n.th,{children:"Actual type (if different from JSON type)"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"cacheValidNotBefore"})}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Unsigned 64-bit integer"}),(0,i.jsx)(n.td,{children:"UNIX timestamp that specifies the time from which this cache entry may be treated as valid."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"cacheValidNotAfter"})}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"Unsigned 64-bit integer"}),(0,i.jsx)(n.td,{children:"UNIX timestamp that specifies a time until which this cache entry may be treated as valid."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"cacheSignature"})}),(0,i.jsx)(n.td,{children:"String"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsxs)(n.td,{children:["Signature generated by the home server. This signature can be verified using the home servers' public identity key. Signature bytes, encoded in ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Hexadecimal",children:"Hexadecimal"})," (base-16)."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"invalidatedAt"})}),(0,i.jsx)(n.td,{children:"String?"}),(0,i.jsx)(n.td,{children:"Unsigned 64-bit integer"}),(0,i.jsxs)(n.td,{children:["If present, represents a UNIX timestamp at which the certificate was ",(0,i.jsx)(n.a,{href:"#614-early-revocation-of-id-certs",children:"invalidated"})," on. Certificate was not prematurely invalidated if not present."]})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["A server generates the ",(0,i.jsx)(n.code,{children:"cacheSignature"})," by concatenating the serial number of the ID-Cert in\nquestion with the ",(0,i.jsx)(n.code,{children:"cacheValidNotBefore"})," timestamp, the ",(0,i.jsx)(n.code,{children:"cacheValidNotAfter"})," timestamp, and the ",(0,i.jsx)(n.code,{children:"invalidatedAt"}),"\ntimestamp, if present."]}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsx)(n.p,{children:"The order in which the concatenation operations are executed is important and must be adhered\nto. The order is as follows:"}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:'cacheSignature \u22c5 cacheValidNotBefore \u22c5 cacheValidNotAfter \u22c5 (invalidatedAt|"")\xb9'})}),(0,i.jsx)(n.p,{children:"\xb9: The value of invalidatedAt, if present; otherwise, an empty string."})]}),"\n",(0,i.jsxs)(n.p,{children:["The resulting string is signed using the home servers private identity key.\nClients must reject certificates of which the ",(0,i.jsx)(n.code,{children:"cacheSignature"})," can not be verified to be\ncorrect."]}),"\n",(0,i.jsx)(n.admonition,{title:"Note/Fun fact",type:"note",children:(0,i.jsx)(n.p,{children:'Note how the cache validity period is determined by the "original" home server and automatically\npropagated through\u2014and respected by\u2014every server and client caching the certificate. If another\nserver tried to manipulate the cache validity period, they would get found out almost immediately.'})}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"Concatenation operations are not commutative."})}),"\n",(0,i.jsxs)(n.admonition,{title:"Definition: Concatenation",type:"note",children:[(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:'In formal language theory and computer programming, string concatenation is the operation of\njoining character strings end-to-end. For example, the concatenation of "snow" and "ball" is\n"snowball".'}),"\n"]}),(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.em,{children:["From Wikipedia, The Free Encyclopedia. ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/w/index.php?title=Concatenation&oldid=1266032132#:~:text=In%20formal%20language,a%20primitive%20notion.",children:"Source"})]})})]}),"\n",(0,i.jsx)(n.p,{children:"Because digital signatures rely on asymmetric key cryptography, possession of this server's public\nidentity key allows an actor to validate that a cached ID-Cert is both genuine and up-to-date."}),"\n",(0,i.jsxs)(n.p,{children:["This technique remedies the possibility of caching introducing an additional attack vector, allowing\ncaching to be used without conflicting with the ",(0,i.jsx)(n.a,{href:"#2-trust-model",children:"trust model"})," of polyproto."]}),"\n",(0,i.jsxs)(n.admonition,{title:"Scenarios requiring cache and validity verification",type:"info",children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Only"})," the following scenarios ",(0,i.jsx)(n.strong,{children:"must require"})," a server to retrieve, validate and supply invalidation\nand cache information about a foreign actor's ID-Cert:"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sending messages:"})," Before a foreign actor is allowed to send any messages on the server. This\nautomatically applies again if the ID-Cert is changed through any means."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ID-Cert request:"})," When the server receives a request for a foreign actor's ID-Cert, the server\nmust fetch and validate invalidation and cache information about the foreign actor's ID-Cert before\ncompleting the request."]}),"\n"]})]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.mdxAdmonitionTitle,{children:["Scenarios ",(0,i.jsx)(n.strong,{children:"not"})," requiring cache and validity verification"]}),(0,i.jsxs)(n.p,{children:["The following scenarios ",(0,i.jsx)(n.strong,{children:"must explicitly not require"})," a server to retrieve, verify or supply invalidation\nand cache information about a foreign actor's ID-Cert:"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Requesting a challenge string:"})," When a foreign actor requests a challenge string from the server."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Requesting a key trial:"})," When a foreign actor requests a key trial from the server."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Completing a key trial:"})," When a foreign actor completes a key trial from the server."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Re-signing messages request:"})," When a foreign actor requests to re-sign messages on the server."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Re-signing messages abortion request:"})," When a foreign actor requests to abort the re-signing\nof messages on the server."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Re-signing messages commitment:"})," When a foreign actor commits re-signed messages to the server."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Re-signing messages commitment:"})," When a foreign actor fetches messages to-be re-signed from\nthe server."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Requesting a redirect:"}),' When a foreign ("new") actor asks the server of the "old" server to\nset up a redirect to the "new" actor.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key trial information request:"})," When an actor requests information about completed key trials\nfrom the foreign actor."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Requesting a home server ID-Cert:"})," When an actor requests the ID-Cert of a home server \u2014 an\naction that can only be performed by asking the home server in question directly, that ID-Cert\nmustn't contain cache and validity information. Since home server ID-Certs are self-signed,\ncache and validity information would not benefit anyone."]}),"\n"]})]}),"\n",(0,i.jsxs)(n.p,{children:["polyproto implementation must not require cache and validity verification on any route not specified\nin the above information block, except if a ",(0,i.jsx)(n.a,{href:"#8-protocol-extensions-p2-extensions",children:"p2-extension"})," states\notherwise."]}),"\n",(0,i.jsx)(n.h3,{id:"65-cryptographic-specifications",children:"6.5 Cryptographic specifications"}),"\n",(0,i.jsxs)(n.p,{children:["All implementations of polyproto ",(0,i.jsx)(n.strong,{children:"must"})," use the Ed25519 digital signature algorithm for signing\nmessages and generating ID-Certs. The usage of alternative cryptographic algorithms is allowed.\nHowever, certificates and messages must be made available with Ed25519 signatures per default."]}),"\n",(0,i.jsx)(n.h3,{id:"66-best-practices",children:"6.6 Best practices"}),"\n",(0,i.jsx)(n.p,{children:"The following subsections are dedicated to documenting best practices to consider when\nimplementing polyproto."}),"\n",(0,i.jsx)(n.h4,{id:"661-signing-keys-and-id-certs",children:"6.6.1 Signing keys and ID-Certs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"When a server is asked to generate a new ID-Cert for an actor, it must make sure that the CSR is\nvalid and, if set, has an expiry date less than or equal to the expiry date of the server's own ID-Cert."}),"\n",(0,i.jsxs)(n.li,{children:["Due to the fact that a ",(0,i.jsx)(n.code,{children:"SERVER_KEY_CHANGE"})," gateway event is bound to generate a large amount of\ntraffic, servers should only manually generate a new identity key pair when absolutely necessary\nand instead select a fitting expiry date interval for their ID-Certs. It might\nalso be a good idea to stagger the sending of ",(0,i.jsx)(n.code,{children:"SERVER_KEY_CHANGE"})," gateway events to prevent a\nserver from initiating a DDoS attack on itself. "]}),"\n",(0,i.jsx)(n.li,{children:"When a client or server receives the information that an actor's client identity key has been\nchanged, the client/server in question should update their cached ID-Cert for the actor in\nquestion, taking into account the session ID of the new identity key pair."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"662-home-server-operation-and-design",children:"6.6.2 Home server operation and design"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use a caching layer for your home server to handle the potentially large amount of requests for\nID-Certs without putting unnecessary strain on the database."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"663-private-key-loss-prevention-and-private-key-recovery",children:"6.6.3 Private key loss prevention and private key recovery"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"It is a good idea for home servers to limit the upload size and available upload slots for encrypted\nprivate identity keys."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"7-migrations",children:"7. Migrations"}),"\n",(0,i.jsx)(n.p,{children:"polyproto empowers the end user by defining straightforward mechanisms to change their home server\nwhile preserving their identity, moving messages to another server, or both."}),"\n",(0,i.jsx)(n.p,{children:"Identity migration allows actors to transparently reassign ownership of their identity and messages\nto a new identity. This allows actors to switch home servers while not losing ownership of messages\nsent by them."}),"\n",(0,i.jsx)(n.p,{children:"Message migration allows actors to move messages from one service provider to another in a\ntamper-resistant way. This makes it possible for actors to switch service providers, taking some\nor all of their messages with them. Which messages can be moved is up to P2 extensions to define,\nas it might not always be possible to move all messages. Some messages might be tied to a\nspecific context, which is unavailable on the new server."}),"\n",(0,i.jsx)(n.admonition,{title:"Example: Information tied to a specific context",type:"tip",children:(0,i.jsx)(n.p,{children:"In a chat application, there might exist a group chat with a lot of people in it. Moving your\nmessages from this group chat to another server might be impossible, depending on the architecture\nof the chat application. Typically, the messages in a group chat are stored on the server\nhosting the group. Moving the messages of one individual from one server to another is not\npossible in these cases."})}),"\n",(0,i.jsx)("a",{name:"example-static-information",id:"example-static-information"}),"\n",(0,i.jsx)(n.admonition,{title:"Example: Information not necessarily tied to a specific context",type:"tip",children:(0,i.jsx)(n.p,{children:"Continuing the chat application example, it might very well be possible to move messages\nwritten in a private chat between two actors from one server to another. An exemplary\narchitecture where this is possible is where all private messages are stored on the server of\nthe actor who sent the message. Here, an actor can move their messages to another server without\nany issues."})}),"\n",(0,i.jsx)(n.p,{children:"Migrating an actor always involves reassigning the ownership of all actor-associated data in the\ndistributed network to the new actor. Should the old actor want to additionally move all data from\nthe old home server to another home server, more steps are needed. Account migration is not considered\na sensitive action."}),"\n",(0,i.jsx)(n.p,{children:"This chapter defines behaviors and security mechanisms associated with migrating an actor identity\nor messages."}),"\n",(0,i.jsx)(n.h3,{id:"71-identity-migration",children:"7.1 Identity migration"}),"\n",(0,i.jsx)(n.p,{children:"Transferring message ownership from an old to a new account, known as\nidentity migration, necessitates coordination between the two involved accounts."}),"\n",(0,i.jsx)(n.p,{children:"Identity migration is a process that can be broken down into the following steps:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#711-redirects",children:"Setting up a redirect"})," to associate the new actor with the old actor."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#72-re-signing-messages",children:"Re-signing data"})," to grant ownership of messages sent by the old actor to\nthe new actor."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"It is not required that the new account is located on another home server as the old account.\nRe-signing data and setting up a redirect are both not mandatory steps. It is up to actors to decide\nto which extent they wish to perform the migration."}),"\n",(0,i.jsx)(n.h4,{id:"711-redirects",children:"7.1.1 Redirects"}),"\n",(0,i.jsx)(n.p,{children:"Setting up a redirect is an optional step in the identity migration process, helping\nmake the transition from the old account to the new account smoother."}),"\n",(0,i.jsx)(n.p,{children:"A redirect has to be confirmed by both the redirection source and the redirection target. The redirect\nis only valid for one specific redirection target. Redirection targets must be valid actors, and their\nhome servers must be reachable when the redirect is being set up."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:'"Optional" does not mean that home servers can choose to not implement this feature. Instead,\nit means that actors can choose to not use this feature.'})}),"\n",(0,i.jsx)(n.mermaid,{value:'sequenceDiagram\nautonumber\n\nactor aa as Alice Old (Redirection source)\nparticipant sa as "Alice Old" Home Server\nactor ab as Alice New (Redirection target)\n\nNote over aa, ab: These steps may be done in any order<br/>and are not necessarily sequential\npar Verifying redirect intent by passing key trial\n  aa->>sa: Request redirect to Alice New\n  sa-)sa: Confirm "Alice New"<br/>is valid actor by resolving FID\n  sa->>aa: List of keys to<br/>verify + challenge string\n  aa->>sa: Completed challenge<br/>for each key on the list\n  sa->>sa: Set redirect status to<br/>"confirmed by redirection source"\nand Notifying the redirection source\'s home server of the redirection target\n  ab->>sa: Request redirect from Alice Old\n  sa->>sa: Verify authenticity of Alice New\'s identity by verifying ID-Cert\n  note over sa: Alice New\'s ID-Cert is determined to be valid\n  sa->>ab: Challenge string (See section 4.1.1:<br/>Authenticating on a foreign server)\n  ab->>sa: Completed challenge\n  sa->>sa: Set redirect status to<br/>"confirmed by redirection target"\nend\nsa->>sa: Check, if both redirection source and target have confirmed the redirect\nalt If both redirection source and target have confirmed the redirect\n  sa->>sa: Use HTTP 307 to redirect all requests for<br/>Alice Old to Alice New\nelse\n  Note over sa: Do nothing\nend'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Fig. 5: Sequence diagram depicting the setting up of a redirect."})}),"\n",(0,i.jsxs)(n.p,{children:["Until a redirection source actor deletes their account, the home server of that actor should respond\nwith ",(0,i.jsx)(n.code,{children:"307 Temporary Redirect"})," to requests for information about the redirection source. After\nthe redirection source deletes their account, Server A can select to either respond with\n",(0,i.jsx)(n.code,{children:"308 Permanent Redirect"}),", or to remove the redirect entirely."]}),"\n",(0,i.jsx)(n.h3,{id:"72-re-signing-messages",children:"7.2 Re-signing messages"}),"\n",(0,i.jsx)(n.p,{children:'Re-signing messages is the process of transparently changing the signature of messages while leaving\nthe content of the messages unchanged. "Transparently" refers to the fact that an outsider can\nverify the following facts:'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Both involved actors have agreed to the re-signing of the messages."}),"\n",(0,i.jsx)(n.li,{children:'The "old" actor has proven ownership of the signature keys used to produce the "old" signatures\nof the messages.'}),"\n",(0,i.jsx)(n.li,{children:"The message content has not changed during the re-signing process."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The intended use cases for re-signing messages are:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Changing ownership of messages from one actor to another. This enables seamless transitions\nbetween accounts while preserving the integrity of the messages."}),"\n",(0,i.jsx)(n.li,{children:"Reducing the amount of keys that need to be remembered by an actor is done if the actor deems it to\nbe convenient."}),"\n",(0,i.jsx)(n.li,{children:'"Rotate keys of past messages" - This is useful when an actor\'s private identity key has been\ncompromised, and the actor wants to ensure that all messages sent by them are still owned by them\nand not at risk of being tampered with.'}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Actors must not be able to re-sign messages to which they cannot prove signature-key ownership."}),"\n",(0,i.jsx)(n.p,{children:"Additionally, servers must verify the following things about re-signed messages:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The new signature matches the messages' contents and is valid."}),"\n",(0,i.jsx)(n.li,{children:"The ID-Cert corresponding to the new signature is a valid ID-Cert, issued by the correct home\nserver."}),"\n",(0,i.jsxs)(n.li,{children:["The ID-Cert corresponding to the new signature has a public key that was specified in the\n",(0,i.jsx)(n.code,{children:"allowedResigningKeys"})," property sent to the server when message re-signing was requested."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"expires"})," UNIX timestamp, specified when the server replied to the re-signing request,\nhas not been reached or passed when the re-signed message was received by the server."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Below is a sequence diagram depicting a typical re-signing process, which transfers ownership of\nmessages from Alice A to Alice B."}),"\n",(0,i.jsx)(n.mermaid,{value:'sequenceDiagram\nautonumber\n\nactor aa as Alice A\nactor ab as Alice B\nparticipant sc as Server "C" with stored<br/>messages from Alice A\n\naa->>sc: Request allow message re-signing for Alice B + list of "allowed" pubkeys\nsc->>aa: List of keys to verify + challenge string (Key trial)\naa->>sc: Completed challenge for each key on the list\nsc->>sc: Verify challenge, unlock re-signing for Alice B (only "allowed" pubkeys)\nsc->>aa: Re-signing of messages for Alice B allowed\nloop Do, while there are messages left to be re-signed\n  ab->>sc: Request message re-signing<br/>for Alice A\'s messages\n  sc->>ab: Batch of old messages,<br/>including the signatures + actor certificates\n    Note over ab: The client should fetch missing information<br/>such as missing ID-Certs or server public keys<br/>needed to validate the messages from the<br/>corresponding servers, if applicable\n  ab->>ab: Verify that Server C has not<br/>tampered with messages by<br/>checking old signatures with own keys\n  ab->>ab: Re-sign messages with own keys\n  ab->>sc: Send new messages\n  sc->>sc: Verify that only FID and signature related fields have changed\n  sc->>sc: Verify that key used to produce signature is on "allowed" list\n  sc->>ab: Acknowledge successful re-signing of batch\n  opt\n    ab--)ab: Pause for arbitrary amount of time\n  end\nend'}),"\n",(0,i.jsxs)(n.p,{children:["To allow for a singular set of behaviors, which fit the three intended use cases mentioned prior,\nnot all messages stored by the server of an actor need to be re-signed.\nBesides querying for all non-re-signed messages, actors can also query for all non-resigned\nmessage whose signatures correspond to a specific ID-Cert. The API routes\nfor re-signing messages are documented in the ",(0,i.jsx)(n.a,{href:"https://apidocs.polyproto.org",children:"API documentation"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"721-message-batches",children:"7.2.1 Message batches"}),"\n",(0,i.jsx)(n.p,{children:"Messages that have not yet been re-signed are being delivered to an actor in batches. A batch is\na JSON object, representing messages sent using the same ID-Cert. An\nexemplary array of message batches, as returned by the server, might look as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n  {\n    id_cert: "QLASDiohs79034sjkldfny8eppqxncp7n4g9vozeyuiwofxb...",\n    messages: [\n      {\n        signature: "ASDiohs79034sjkldfny8eppqxncp7n4g9vozeyuiwofxb...",\n        content: {\n          message: "Hello!"\n        }\n      },\n      {\n        signature: "ASDiohs7902347sjkldfny8eafhjhjafdlk4g121ghjkz...",\n        content: {\n          message: "Hello again!"\n        }\n      }\n    ]\n  },\n  {\n    id_cert: "QLAxasdiohs79034sjkldfny8eppqxncp7n4g9vozeyuiwofxn...",\n    messages: [\n      {\n        ...\n      }\n    ]\n  }\n]\n'})}),"\n",(0,i.jsx)(n.p,{children:"The concrete values held by a message batch are up to the concrete implementation. The prior JSON\narray depicting an array of message batches is only an example. However, it is mandatory that a\nmessage batch holds the following information:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The ID-Cert used to sign the messages in the batch"}),"\n",(0,i.jsxs)(n.li,{children:["An array of messages, which must at least contain the following information:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The signature of the message"}),"\n",(0,i.jsx)(n.li,{children:"The full content of the message"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Returning re-signed messages to the server is done in the same format as the server sends them to\nthe client."}),"\n",(0,i.jsx)(n.h4,{id:"722-server-imposed-limits",children:"7.2.2 Server-imposed limits"}),"\n",(0,i.jsx)(n.h5,{id:"7221-body-size",children:"7.2.2.1 Body size"}),"\n",(0,i.jsxs)(n.p,{children:["Servers can limit the size of an HTTP request body containing re-signed messages.\nIf a body size limit is imposed, the server must communicate\nthis to clients in their response to a query for messages that have not yet been re-signed.\nCommunicating the body size limit is done by adding an ",(0,i.jsx)(n.code,{children:"X-P2-Return-Body-Size-Limit"})," header to the\nresponse. If this header is not present or has a value of ",(0,i.jsx)(n.code,{children:"0"}),", clients should assume that there is\nno body size limit."]}),"\n",(0,i.jsx)(n.h5,{id:"7222-interval-between-re-signing-batches",children:"7.2.2.2 Interval between re-signing batches"}),"\n",(0,i.jsx)(n.p,{children:"Servers must define an interval, which a client must wait for before sending a new batch of re-signed\nmessages to the server."}),"\n",(0,i.jsxs)(n.p,{children:["The server communicates this interval to the client as a response to receiving a batch of re-signed\nmessages from the client. The interval is communicated by adding a\n",(0,i.jsx)(n.code,{children:"Retry-After"})," header to the response. The value of this header is a 16-bit integer. The integer\nrepresents a delay in seconds that a client must wait for before sending the next batch of re-signed\nmessages."]}),"\n",(0,i.jsx)(n.p,{children:"Clients should expect that the duration of the interval changes between batches. The server can\ndynamically adjust the duration that a client must wait before being allowed to send the next\nbatch of re-signed messages. The server can also select to not impose an interval between re-signing\nbatches. Clients should also expect that the server suddenly decides to impose an interval between\nre-signing batches, even if it has not done so before."}),"\n",(0,i.jsxs)(n.p,{children:["If this header has a value of ",(0,i.jsx)(n.code,{children:"0"}),", clients should assume that there is no interval\nbetween re-signing batches."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Fig. 7: Sequence diagram depicting the re-signing procedure."})}),"\n",(0,i.jsx)(n.h3,{id:"73-moving-data",children:"7.3 Moving data"}),"\n",(0,i.jsx)(n.p,{children:"In cases of an imminent server shutdown or distrust in the old server, moving data from the old server\nis necessary to prevent data loss."}),"\n",(0,i.jsxs)(n.p,{children:["Note that only ",(0,i.jsx)(n.a,{href:"#example-static-information",children:'"static" resources'}),' can be moved. "Dynamic" resources,\nwhich are resources tied to a specific context, can be migrated through ',(0,i.jsx)(n.a,{href:"#72-re-signing-messages",children:"re-signing messages"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"This process extends upon the reassigning ownership process and\nusually involves the following steps:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Using the old account, the client requests a data export from their old home server."}),"\n",(0,i.jsx)(n.li,{children:"The old home server sends a data export to the client. The client will check the signatures on\nthe exported data to ensure it was not tampered with."}),"\n",(0,i.jsx)(n.li,{children:"The new account re-signs the data with its own keys and imports it into the new home server."}),"\n",(0,i.jsx)(n.li,{children:"The new home server verifies the data and signals that the import was successful."}),"\n",(0,i.jsx)(n.li,{children:"The old client requests the deactivation or deletion of the old account on the old home server."}),"\n"]}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\nautonumber\n\nparticipant sa as Server A\nparticipant sb as Server B\nbox Same Device\nactor aa as Alice A\nactor ab as Alice B\nend\n\naa->>sa: Request data export\nsa->>aa: Data export\naa->ab: Data shared on device\nab->>ab: Verify data integrity\nab->>ab: Re-sign data\nab->>sb: Request data import\nsb->>sb: Verify data integrity\nsb->>ab: Data import successful\naa-xsa: Deactivate account"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Fig. 8: Sequence diagram depicting the data-moving process."})}),"\n",(0,i.jsxs)(n.p,{children:["The API routes for data export and import are documented in the\n",(0,i.jsx)(n.a,{href:"https://apidocs.polyproto.org",children:"API documentation"})]}),"\n",(0,i.jsx)(n.h4,{id:"731-resource-addressing-with-relative-roots",children:"7.3.1 Resource Addressing with Relative Roots"}),"\n",(0,i.jsx)(n.p,{children:"Moving data from one server to another might break references to this data. To prevent this as much\nas possible, resource addressing with relative roots is recommended for data behind an additional\nlayer of indirection."}),"\n",(0,i.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,i.jsx)(n.p,{children:"In a chat service, a user might have posted a message containing a picture. In this example, the\npicture is stored on the user's home server, which is not necessarily the same server as the\nchat service. If the user moves their account to another server, the picture might not be\naccessible anymore."})}),"\n",(0,i.jsx)(n.p,{children:'Resource addressing with relative roots aids in preventing this issue. Instead of referring to\nthe absolute URL of the resource, the server processing the resource generates a unique identifier.\nThis identifier can be used to retrieve the resource from the server. Most importantly, this\nidentifier does not change when the resource is moved to another server. If the base domain of the\nnew server is known, the identifier can be used to retrieve the resource from the new server.\nThe "relative root" is the base domain of the server, which is used to retrieve the resource.'}),"\n",(0,i.jsx)(n.p,{children:"The uniqueness constraint of the identifier is important. If a collision occurs when trying to\nmove the resource to another server, the resource cannot be migrated in a way that preserves the\nreferences to it. One way to ensure the uniqueness of the identifier is to use a hash function on the\nresource itself. Combining this hash with a cryptographically strong nonce, then hashing the result of\nconcatenating the nonce and the hash of the resource should yield a unique identifier."}),"\n",(0,i.jsx)(n.p,{children:"The URI for resource addressing with relative roots is formatted as follows:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"<server_url>/.p2/core/resource/<resource_id>"})}),"\n",(0,i.jsxs)(n.p,{children:["Uploaded resources can be made private, and access to them can be controlled via allow- and deny lists,\nspecifying access properties for each individual resource. Individual actors and entire instances can\nbe part of these allow- and deny lists. Marking a resource as private restricts access to only the\nuploader and the actors and instances that are part of the allow list. APIs and JSON schemas\nassociated with access control are part of the ",(0,i.jsx)(n.a,{href:"https://apidocs.polyproto.org",children:"API documentation"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The API routes for resource addressing with relative roots are documented more thoroughly in the\n",(0,i.jsx)(n.a,{href:"https://apidocs.polyproto.org",children:"API documentation"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Servers with no need for resource addressing with relative roots can select to not implement this\nfeature. Servers not implementing this feature should return a ",(0,i.jsx)(n.code,{children:"404 Not Found"})," status code when\nthe API route is accessed. Clients should expect finding servers not implementing this feature."]}),"\n",(0,i.jsx)(n.h4,{id:"732-polyproto-exportimport-format",children:"7.3.2 polyproto export/import format"}),"\n",(0,i.jsx)(n.p,{children:"Data exports and -imports must use the polyproto export/import format. Home servers are required to\nsupport this format when actors perform data exports and imports."}),"\n",(0,i.jsxs)(n.p,{children:["The data is a ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Gzip",children:"gzipped"})," ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Tar_(computing)",children:"tarball"}),"\narchive (.tar.gz) named ",(0,i.jsx)(n.code,{children:"export1234567890-user@subdomain.example.com"}),", where"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"export[numbers]"})," is the word ",(0,i.jsx)(n.code,{children:"export"})," with 20 random digits appended to it"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"user"})," is the actor's name"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"subdomain.example.com"})," is the domain name of the server the actor is registered on."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This file archive contains a file ",(0,i.jsx)(n.code,{children:"messages.p2mb"}),", which is a JSON file containing ",(0,i.jsx)(n.a,{href:"#721-message-batches",children:"message batches"}),"\nof all messages sent by the user. If the server where the data export was requested from has\n",(0,i.jsx)(n.a,{href:"#731-resource-addressing-with-relative-roots",children:"RawR"})," enabled, the file archive will contain a\nfolder named ",(0,i.jsx)(n.code,{children:"rawr"}),". This folder contains all RawR content uploaded by the actor to that server.\nThe files in this folder are named after the resource ID given to the resource.\nFile extensions are only added if they were known to the server."]}),"\n",(0,i.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,i.jsxs)(n.p,{children:["An example file name might be\n",(0,i.jsx)(n.code,{children:"2c851bfb6daffa944fa1723c7bd4d362ffbc9defe292f2daaf05e895989d179b.jxl"}),", referencing the file\nwhich was hosted at ",(0,i.jsx)(n.code,{children:"<server_url>/.p2/core/resource/2c851bfb6daffa944fa1723c7bd4d362ffbc9defe292f2daaf05e895989d179b.jxl"}),"."]})}),"\n",(0,i.jsxs)(n.p,{children:["In addition, the folder ",(0,i.jsx)(n.code,{children:"rawr"})," contains a file named ",(0,i.jsx)(n.code,{children:"access_properties.p2al"}),". This JSON\nfile contains a data structure mapping each resource ID to an access properties object. In particular,\nthe file is structured as an array containing objects. Each object has a key that is equal\nto the resource ID of a resource in the ",(0,i.jsx)(n.code,{children:"rawr"})," directory and a value that is an object\nrepresenting the access properties. An example of the contents of this file is given below:"]}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsxs)(n.mdxAdmonitionTitle,{children:["Example of an ",(0,i.jsx)(n.code,{children:"access_properties.p2al"})," file"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n    {\n    "2062a23e2a25b226ca4c546fec5ec06e0df9648281f45da8b5aaabebdf66cf4c.jxl": {\n        "private": false,\n        "allowlist": ["user1@example.com", "instance.example.com"],\n        "denylist": ["user2@example.com", "otherinstance@example.com"]\n    }\n    },\n    {\n    "a9144379a161e1fcf6b07801b70db6d6c481933bd634fe2409eb713723ab1a0a": {\n        "private": true,\n        "allowlist": ["user1@example.com"],\n        "denylist": []\n    }\n    }\n]\n'})})]}),"\n",(0,i.jsxs)(n.p,{children:["If the server where the data export was requested from is the actor's home server, the\narchive will contain a folder ",(0,i.jsx)(n.code,{children:"certs"})," and a file ",(0,i.jsx)(n.code,{children:"crypt_certs.p2epk"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The folder ",(0,i.jsx)(n.code,{children:"certs"})," contains all ID-Certs the server has stored of the actor. The ID-Certs are stored\nin ",(0,i.jsx)(n.a,{href:"https://web.archive.org/web/20250107131731/https://learn.microsoft.com/en-us/azure/iot-hub/reference-x509-certificates#:~:text=ASN.1%20encoding.-,ascii%20pem%20format,-A%20PEM%20certificate",children:"ASCII PEM format"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The file ",(0,i.jsx)(n.code,{children:"crypt_certs.p2epk"})," contains all ",(0,i.jsx)(n.a,{href:"#63-private-key-loss-prevention-and-private-key-recovery",children:"encrypted private key material"}),"\nthat the actor has uploaded to the server. Just like ",(0,i.jsx)(n.code,{children:"messages.p2mb"}),", ",(0,i.jsx)(n.code,{children:"crypt_certs.p2epk"})," is a standard\nJSON file."]}),"\n",(0,i.jsx)(n.h3,{id:"74-challenges-and-trust",children:"7.4 Challenges and trust"}),"\n",(0,i.jsxs)(n.p,{children:['Changing the publicly visible ownership of actor data requires the chain of trust to be maintained.\nIf an "old" account wants to change the publicly visible ownership of its data, the "old" account\nmust prove that it possesses the private keys that were used to sign the messages. This is done by\nsigning a ',(0,i.jsx)(n.a,{href:"#42-sensitive-actions",children:"challenge string"})," with the private keys. If the server verifies\nthe challenge, it authorizes the new account to re-sign the old account's messages signed with the\nverified key. Instead of overwriting the message, a new message variant with the new signature is\ncreated, preserving the old message."]}),"\n",(0,i.jsx)(n.p,{children:"Implementations and protocol extensions should carefully consider the extent of messages that can be\nre-signed."}),"\n",(0,i.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,i.jsx)(n.p,{children:"In the case of a social media platform with quote-posting functionality, it is reasonable to\nassume that re-signing a quoted post is allowed. However, this would likely change the\nsignature of the quoted post, which would be undesirable. Edge cases like these are up to\nimplementations to handle and should be well documented."})}),"\n",(0,i.jsx)(n.h2,{id:"8-protocol-extensions-p2-extensions",children:"8. Protocol extensions (P2 extensions)"}),"\n",(0,i.jsx)(n.p,{children:"polyproto leaves room for extensions, outsourcing concepts such as concrete\nmessage types to protocol extensions. This allows for a more flexible\ncore protocol, which can be adapted to a wide variety of use cases. The following sections\ndefine:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"protocol extensions, also called P2 extensions"}),"\n",(0,i.jsx)(n.li,{children:"how protocol extensions interact with the core protocol"}),"\n",(0,i.jsx)(n.li,{children:"requirements, which must be fulfilled by protocol extensions to become officially endorsed"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"81-extension-design",children:"8.1 Extension design"}),"\n",(0,i.jsxs)(n.p,{children:["P2 extensions ",(0,i.jsx)(n.em,{children:"should"})," be either of the following:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["a ",(0,i.jsx)(n.strong,{children:"major"})," technological addition, which can be taken advantage of\nby other extensions. Examples of this are:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"a unified WebSocket Gateway connection scheme"}),"\n",(0,i.jsx)(n.li,{children:"Message Layer Encryption (MLS)"}),"\n",(0,i.jsx)(n.li,{children:"Compatibility with other protocols (e.g., Matrix, ActivityPub)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["a definition of a ",(0,i.jsx)(n.a,{href:"#9-services",children:"service"}),". Examples of this are:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A federated chat application"}),"\n",(0,i.jsx)(n.li,{children:"A federated social media platform"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"A good P2 extension should never be both at the same time. If a P2 extension is both a\nmajor technological addition and a document describing a particular application use case, it should\nlikely be split into two separate extensions."}),"\n",(0,i.jsx)(n.p,{children:"Designing P2 extensions, which only specify a single route or a small set of behavior changes, is\ndiscouraged. Instead, these should be implemented as part of a larger extension, which offers a\nmore comprehensive set of features."}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"If you are, say, developing a polyproto server implementation with a feature that is not part of\nthe default polyproto specification, you do not have to create a P2 extension for this feature.\nP2 extensions are useful for defining interoperable services, which can be implemented by a variety\nof servers and clients."})}),"\n",(0,i.jsx)(n.h3,{id:"82-namespaces",children:"8.2 Namespaces"}),"\n",(0,i.jsx)(n.p,{children:"A namespace is a string used to identify a specific P2 extension. Used as a prefix in URLs, they\nprevent route name collisions between different extensions. Namespaces should be unique\nand descriptive. They must only contain lowercase letters, numbers, hyphens, and underscores.\nNamespaces must be at least 2 characters long and at most 64 characters long."}),"\n",(0,i.jsx)(n.p,{children:"Officially endorsed P2 extensions have priority over selecting namespaces. If a namespace is already\ntaken by an officially endorsed extension, a different namespace must be chosen. If a namespace\ncollision exists between an officially endorsed extension and a regular P2 extension, the officially\nendorsed extension has priority."}),"\n",(0,i.jsx)(n.h3,{id:"83-officially-endorsed-extensions",children:"8.3 Officially endorsed extensions"}),"\n",(0,i.jsx)(n.p,{children:"Officially endorsed extensions are extensions that either:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"have undergone review and approval by the polyproto maintainers"}),"\n",(0,i.jsx)(n.li,{children:"have been developed by the maintainers themselves"}),"\n",(0,i.jsx)(n.li,{children:"have been developed by a third party and are now maintained by the polyproto maintainers"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Contact the polyphony-chat maintainers at ",(0,i.jsx)(n.a,{href:"mailto:info@polyphony.chat",children:"info@polyphony.chat"}),"\nif you want to have your extension officially endorsed."]}),"\n",(0,i.jsxs)(n.p,{children:["Officially endorsed extensions must fulfill all the requirements listed in\n",(0,i.jsx)(n.a,{href:"#8-protocol-extensions-p2-extensions",children:"section 8"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Each version of an extension developed by outside parties must undergo the review process before\nbeing officially endorsed."}),"\n",(0,i.jsx)(n.h3,{id:"84-versioning-and-yanking",children:"8.4 Versioning and yanking"}),"\n",(0,i.jsx)(n.p,{children:"Semantic Versioning v2.0.0 is used for versioning P2 extensions. The version number of an extension\nis defined in the extension's documentation. The version number must be updated whenever a change is\nmade to the extension. The only exception to this rule is when marking an extension as deprecated\n(yanking)."}),"\n",(0,i.jsx)(n.h4,{id:"841-yanking",children:"8.4.1 Yanking"}),"\n",(0,i.jsxs)(n.p,{children:["Yanking an extension means that the extension is no longer supported and that it ",(0,i.jsx)(n.strong,{children:"should not"}),' be used.\nA later version of the extension should be used instead. Yanked extension versions should prominently\ndisplay the "yanked" status next to the version number in the extension\'s documentation.']}),"\n",(0,i.jsx)(n.p,{children:"Versions of officially endorsed P2 extensions can normally not be removed, only marked as yanked."}),"\n",(0,i.jsx)(n.h3,{id:"85-dependencies",children:"8.5 Dependencies"}),"\n",(0,i.jsx)(n.p,{children:"P2 extensions can depend on other P2 extensions. If an extension depends on another extension, the\nname of the dependency must be listed in the extension's documentation, along with a link to the\ndependency's specification document."}),"\n",(0,i.jsx)(n.p,{children:"The following syntax is used for indicating the version number of a dependency:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Syntax"}),(0,i.jsx)(n.th,{children:"Meaning"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"1.0.0"})}),(0,i.jsxs)(n.td,{children:["Any version of the dependency with the major version ",(0,i.jsx)(n.code,{children:"1"}),", a minor version of ",(0,i.jsx)(n.code,{children:"0"}),", and a patch version of ",(0,i.jsx)(n.code,{children:"0"})," or greater is required."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"1.0"})}),(0,i.jsxs)(n.td,{children:["Any version of the dependency with the major version ",(0,i.jsx)(n.code,{children:"1"})," and the minor version ",(0,i.jsx)(n.code,{children:"0"})," is required. The patch version is unimportant."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"1"})}),(0,i.jsxs)(n.td,{children:["Any version of the dependency with the major version ",(0,i.jsx)(n.code,{children:"1"})," is required. The minor and patch versions are unimportant."]})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"When selecting a version number for a dependency, the highest possible version number that fulfills\nthe requirements should be selected."}),"\n",(0,i.jsx)(n.p,{children:"The name of the dependency, along with the version number, is to be listed right beneath the extension's\nversion declaration in the extension's documentation. Ideally, a link to the dependencies' specification\ndocument should be included."}),"\n",(0,i.jsxs)(n.p,{children:["To grow the ecosystem of interoperable ",(0,i.jsx)(n.a,{href:"#9-services",children:"services"}),", it is encouraged to first develop\na generic version of that service, which acts as a shared base for all implementations. This shared\nbase can then be extended with the exact, non-service-critical features that are needed for a\nspecific implementation."]}),"\n",(0,i.jsx)(n.p,{children:"For example, a generic, federated chat service extension might offer routes for adding\nreactions to chat messages. However, a route for adding reactions with full-screen animation effects\nwould be better suited as an implementation-specific detail."}),"\n",(0,i.jsx)(n.p,{children:"If possible for the given use case, P2 extensions should depend on and extend already existing,\nofficially endorsed P2 extensions."}),"\n",(0,i.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,i.jsxs)(n.p,{children:["Say, you are developing a social chat platform using polyproto. In this example, you would like\nyour chat platform to have a feature, which is not part of the officially endorsed\n",(0,i.jsx)(n.code,{children:"polyproto-chat"})," extension. Instead of developing a new extension from scratch, your chat\nextension should likely depend on ",(0,i.jsx)(n.code,{children:"polyproto-chat"})," and define only this new feature as part of\nyour own extension."]})}),"\n",(0,i.jsx)(n.p,{children:"Doing this ensures a high level of interoperability across all different implementations of a specific\napplication group."}),"\n",(0,i.jsx)(n.h3,{id:"86-routes",children:"8.6 Routes"}),"\n",(0,i.jsx)(n.p,{children:"Polyproto extensions must never change, add, or remove routes defined by the extension they depend on.\nInstead, routes with alternating or new behavior must be added under a newly defined namespace, which\nmust differ from the original namespace. Changing the behavior of existing routes breaks compatibility\nwith other implementations of the same extension."}),"\n",(0,i.jsxs)(n.p,{children:["Route paths must always start with ",(0,i.jsx)(n.code,{children:".p2/"}),", followed by the extensions' namespace. Namespaces are\nexplained in ",(0,i.jsx)(n.a,{href:"#82-namespaces",children:"section 8.2"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"9-services",children:"9. Services"}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:'A "service" is any application-specific implementation of polyproto, defined by a P2 extension.\nAll services are P2 extensions, but not all P2 extensions are services.'})}),"\n",(0,i.jsx)(n.p,{children:"Actors can use their identity to register with any server hosting polyproto services, such as polyproto-chat.\nThese servers can be the actors' home server, but can also be foreign servers. There is no limitation\nto how many services any given actor can register with and what these services are."}),"\n",(0,i.jsx)(n.p,{children:"Application-specific implementations of polyproto should consider that users of their service might\nalso want to register for services offered by other servers, using the same identity."}),"\n",(0,i.jsx)(n.h2,{id:"91-discoverability",children:"9.1 Discoverability"}),"\n",(0,i.jsx)(n.p,{children:"The discoverability feature allows users who are registered with the same service but on different\nservers to communicate with each other. The actor initiating the communication only needs to know the\nfederation ID of the actor they want to communicate with. Consider the following example:"}),"\n",(0,i.jsxs)(n.admonition,{title:"Example: Discovering services",type:"tip",children:[(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["The example below is simplified for the sake of clarity. In a real-world scenario, Alice\nand the chat server would perform the foreign server authentication procedure described in\n",(0,i.jsx)(n.a,{href:"#411-authenticating-on-a-foreign-server",children:"section 4.1.1"})," before Alice can send a\nchat message to Bob. The example also uses a simplified example of how polyproto-chat works."]})}),(0,i.jsx)(n.p,{children:"Alice and Bob want to communicate with each other. Both Alice and Bob are registered on servers\nthat host the polyproto-chat service. However, Alice and Bob are not registered on the same\nserver, and they do not share any chat rooms. Alice types in Bob's federation ID into her\nchat client. The client then queries Bob's home server to find out which server Bob uses\nfor the polyproto-chat service. Alice's client can then send the chat message to Bob's server,\nwhich will forward the chat message to Bob."}),(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\nautonumber\n\nparticipant sb as Bob's Home Server\nactor aa as Alice\nparticipant sc as Chat server Bob is registered on\nactor ab as Bob\n\naa->>sb: Query: Which server is Bob using for polyproto-chat?\nsb->>aa: Response: URL of Chat server Bob is registered on\naa->>sc: Message to Bob\nsc->>ab: Forward message from Alice to Bob"}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Fig. 9: Sequence diagram depicting how Alice's client discovers which server Bob is using for\nthe exemplary polyproto-chat service."})}),(0,i.jsx)(n.p,{children:"The example demonstrates how Alice can communicate with Bob, even though they do not share any\nservers."})]}),"\n",(0,i.jsx)(n.p,{children:"To be discoverable, an actor must add a key-value pair to their home server's database. The\nkey is the name of the service, and the value is the base URL of the server hosting the service."}),"\n",(0,i.jsxs)(n.p,{children:["The API routes for managing discoverability are documented in the\n",(0,i.jsx)(n.a,{href:"https://apidocs.polyproto.org",children:"API documentation"})]}),"\n",(0,i.jsx)(n.h3,{id:"911-changing-a-primary-service-provider",children:"9.1.1 Changing a primary service provider"}),"\n",(0,i.jsx)(n.p,{children:'Keys are unique in the actor-scoped service->service-provider table. Actors wanting\nto register for two or more different implementations of the same service must select which\nservice provider to use as a "primary service provider" for that service.'}),"\n",(0,i.jsx)(n.p,{children:"If the actor is human, clients must not override the existing\nkey-value pair silently. Instead, clients must either ask the actor to confirm the change or\nnot change the key-value pair."}),"\n",(0,i.jsx)(n.p,{children:"Changing a primary service provider entry is considered a sensitive action and should\nrequire a second factor of authentication."}),"\n",(0,i.jsxs)(n.p,{children:["Messages do not get moved or re-signed when changing the primary\nservice provider for a given service. If an actor wants to move their messages to the new primary\nservice provider, they must request a ",(0,i.jsx)(n.a,{href:"#7-migrations",children:"migration"}),"."]})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);