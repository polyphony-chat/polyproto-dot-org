"use strict";(self.webpackChunkpolyproto_dot_org=self.webpackChunkpolyproto_dot_org||[]).push([[3976],{2053:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"intro","title":"An Overview of polyproto","description":"This overview page is not yet finished. However, that what is there is already representative of","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/docs/intro","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Protocol Definitions","permalink":"/docs/category/protocol-definitions"}}');var o=n(4848),r=n(8453);const s={sidebar_position:1},a="An Overview of polyproto",l={},h=[{value:"Identity",id:"identity",level:2},{value:"Certificates and Keys",id:"certificates-and-keys",level:2},{value:"Message signing",id:"message-signing",level:2},{value:"Trust",id:"trust",level:2},{value:"Multi-use",id:"multi-use",level:2},{value:"Federation",id:"federation",level:2},{value:"Technology",id:"technology",level:2},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",section:"section",strong:"strong",sup:"sup",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"an-overview-of-polyproto",children:"An Overview of polyproto"})}),"\n",(0,o.jsx)(t.admonition,{title:'"Work in Progress"',type:"warning",children:(0,o.jsx)(t.p,{children:"This overview page is not yet finished. However, that what is there is already representative of\nwhat the polyproto protocol is about."})}),"\n",(0,o.jsx)(t.p,{children:"polyproto is a federated identity and message exchange protocol, which can be used for almost\nanything. If you'd like to build an application where federation, user control and data integrity\nare wanted, then polyproto is most likely for you. Read this overview to get to know the core\nconcepts and technologies used in the protocol."}),"\n",(0,o.jsx)(t.h2,{id:"identity",children:"Identity"}),"\n",(0,o.jsx)(t.p,{children:"Your identity is always represented by a Federation ID, FID for short. Conceptually, FIDs are\nnothing new, and they look like this:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"xenia@some.example.com"})}),"\n",(0,o.jsxs)(t.p,{children:["Everything after the ",(0,o.jsx)(t.code,{children:"@"})," is your Home Servers' domain, and the part before the ",(0,o.jsx)(t.code,{children:"@"})," is your username.\nTogether, this makes for an individual, yet globally unique identifier."]}),"\n",(0,o.jsx)(t.h2,{id:"certificates-and-keys",children:"Certificates and Keys"}),"\n",(0,o.jsx)(t.p,{children:"Identity Certificates - ID-Certs for short - represent your identity when logged in on different\nsessions. Each Identity Certificate contains the following information:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Your federation ID, so that an account can be uniquely identified"}),"\n",(0,o.jsx)(t.li,{children:"A session ID, which is unique for each session and does not change, even if the keys change"}),"\n",(0,o.jsx)(t.li,{children:"An expiry date, after which the certificate becomes invalid"}),"\n",(0,o.jsx)(t.li,{children:"A signature, generated by your home server, which acts as part of the proof that this certificate\nwas actually issued by your home server"}),"\n",(0,o.jsx)(t.li,{children:"Some information from your home server (Home server domain, certificate serial number)"}),"\n",(0,o.jsx)(t.li,{children:"Information about the signature algorithm used"}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"and, last but not least"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"The public identity key of the client"}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["For the sake of explanation, the most important parts here are the ",(0,o.jsx)(t.strong,{children:"client public identity key"}),",\nyour ",(0,o.jsx)(t.strong,{children:"federation ID"}),", the ",(0,o.jsx)(t.strong,{children:"home servers' domain"})," and the ",(0,o.jsx)(t.strong,{children:"home servers' signature for this\ncertificate"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"message-signing",children:"Message signing"}),"\n",(0,o.jsx)(t.p,{children:"When you, for example, chat with someone on a different server, that other server is fully in\ncontrol about what data it chooses to present to you. To make sure that this server is always\ntelling you the truth, and not, for example, manufacturing chat messages or social media posts made\nby a person, messages are signed using a clients' public identity key."}),"\n",(0,o.jsx)(t.mermaid,{value:"flowchart LR\n    hs[(Your Home Server)] --- you(You)\n    you -- Send signed message --\x3e fs[(A Foreign Server)]\n    fs -- Forwards message --\x3e other(Other User)\n    fs --\x3e verify{Verify message signature}\n    other --\x3e verify\n    verify -- Get certificate from home server to verify --\x3e hs"}),"\n",(0,o.jsx)(t.p,{children:"This is how it works:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"As touched on previously, every user client has an own identity key pair, comprised of a public\nand a private key. The public key is cryptographically linked to the private key, meaning that\nthis public key can not belong to another private key. Signing data is done using the private key,\nwhich ONLY the client knows. Everyone can then use your public key to prove that this signature\nwas generated by your client, and that the signature matches the data which was signed."}),"\n",(0,o.jsxs)(t.li,{children:["Signatures are unique to a piece of data, meaning that two differing pieces of data signed by the\nsame or different private keys will always",(0,o.jsx)(t.sup,{children:(0,o.jsx)(t.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":"","aria-describedby":"footnote-label",children:"1"})})," produce different signatures. This is the case,\neven if the data only differs minutely (be it by a single space, or a single comma)."]}),"\n",(0,o.jsxs)(t.li,{children:["Your home server attests to a clients' key pair, by creating a certificate for your public key,\nwhich it signs with its own secret, public/private key pair, and then sends to you. Your ",(0,o.jsx)(t.em,{children:"private"}),"\nkey is never sent anywhere at all, and it does not need to be."]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Now, your public identity key and your home servers' identity key are 'linked' to each other. This\nis represented in the ID-Cert you then receive from your home server."}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:'When communicating with another "foreign" server in polyproto, you first send that server your\nID-Cert. The server can then prove the validity of your identity, simply by asking your home\nserver for its public key and performing a quick signature verification.'}),"\n",(0,o.jsx)(t.li,{children:"When sending data to the server, such as chat messages, your client computes the signature for\nthat message using your private key, and attaches this signature to the message you send to other\nservers."}),"\n",(0,o.jsx)(t.li,{children:"Any user, at any point, can now take this signature, your identity certificate and your home\nservers' public key and cryptographically verify that it was, in fact, you who sent the message,\nand that the message was not tampered with in any way. To distribute the load of ID-Cert requests\nmore evenly, it is always the duty of the server that the data exchange is happening on, to cache\nand hand out ID-Certs of users."}),"\n"]}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsxs)(t.p,{children:["If you are interested about the details, feel free to jump to\n",(0,o.jsx)(t.a,{href:"protocols/core/#61-home-server-signed-certificates-for-public-client-identity-keys-id-cert",children:"section 6.1 in the protocol"}),"\nspecification document, which covers this exact thing and more."]})}),"\n",(0,o.jsx)(t.h2,{id:"trust",children:"Trust"}),"\n",(0,o.jsx)(t.p,{children:"Trusting the smallest possible amount of entities is great practice when it comes to security.\npolyproto makes sure that almost everyone you do trust is under constant scrutiny, and thus provides\nmeasures to verify a data authors' identity, and that the actual data has not been tampered with."}),"\n",(0,o.jsx)(t.p,{children:"Aside from yourself, the entity with the most trust assigned to it is your home server. Creating\nyour identity on a specific home server is a pledge from that server and its admins to you, where\nthey promise not to create sessions on your behalf, or to otherwise perform actions which can be\npublicly identified to be carried out by you, without your explicit consent."}),"\n",(0,o.jsx)(t.p,{children:"Should you ever change your mind about your home server's trustworthiness, you can always migrate to\nanother server while keeping the ownership status of your data on all servers you have sent data to,\neven if your home server is offline indefinitely."}),"\n",(0,o.jsx)(t.h2,{id:"multi-use",children:"Multi-use"}),"\n",(0,o.jsx)(t.p,{children:"polyprotos' API definitions and specification document intentionally leave space for\nimplementation-specific data to be sent, where it makes sense. Nothing about the core protocol makes\npolyproto inherently unsuitable for any purpose."}),"\n",(0,o.jsx)(t.h2,{id:"federation",children:"Federation"}),"\n",(0,o.jsx)(t.p,{children:"Federation in polyproto means using one identity or client to interact with multiple servers or even\nservices at once. Implementing federation is straightforward, and entirely seamless to use for end\nusers."}),"\n",(0,o.jsx)(t.h2,{id:"technology",children:"Technology"}),"\n",(0,o.jsx)(t.p,{children:"Probably the most refreshing aspect about this new protocol is, that it is really boring. There is\nreally nothing new about any given atomic aspect of polyproto. Polyproto uses well-known, tried and\nbattle-tested technologies, such as asymmetric encryption, X.509-based public key infrastructure and\n-certificates, digital signatures, JSON over REST and other, already well established technologies\nsuch as WebSockets."}),"\n",(0,o.jsx)(t.p,{children:"polyproto should be effortless - both for developers and for end users, who, ideally, should never\nhave to notice any of the technical stuff going on in the background."}),"\n",(0,o.jsx)(t.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,o.jsxs)(t.p,{children:["This is just an outline about how polyproto works. The goal with this outline is to inform about the\nmost relevant parts, while intentionally leaving out some details for the sake of clarity. If you\nhave read and understood this overview, you should have no - or at least way less - trouble reading\nthe ",(0,o.jsx)(t.a,{href:"protocols/core/",children:"full protocol specification"}),", which covers a lot more details!"]}),"\n","\n",(0,o.jsxs)(t.section,{"data-footnotes":"",className:"footnotes",children:[(0,o.jsx)(t.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{id:"user-content-fn-1",children:["\n",(0,o.jsxs)(t.p,{children:["Signature/hash collisions, which although theoretically possible, are extraordinarily infrequent\nand thus, negligible in practical scenarios. ",(0,o.jsx)(t.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(6540);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);