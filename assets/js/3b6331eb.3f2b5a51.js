"use strict";(self.webpackChunkpolyproto_dot_org=self.webpackChunkpolyproto_dot_org||[]).push([[7952],{5462:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>n,toc:()=>h});var n=o(7558),i=o(4848),a=o(8453);const r={draft:!1,date:new Date("2024-02-07T00:00:00.000Z"),categories:["polyproto"],authors:["bitfl0wer"],title:"Account migration in polyproto"},s="Account migration in polyproto",l={authorsImageUrls:[void 0]},h=[{value:"The problem",id:"the-problem",level:2},{value:"How polyproto works, briefly",id:"how-polyproto-works-briefly",level:2},{value:"Migrating an account on polyproto",id:"migrating-an-account-on-polyproto",level:2},{value:"Low data centralization",id:"low-data-centralization",level:3},{value:"Moving data",id:"moving-data",level:3},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Account migration is an important and difficult thing to get right in federated systems. In this\nblog post, I will outline how I imagine account migration to work in polyproto, and what benefits\nthis approach brings."}),"\n",(0,i.jsx)(t.p,{children:"{/_ truncate _/}"}),"\n",(0,i.jsx)(t.p,{children:"It seems that striking a good balance between user experience, convenience and privacy has been a\ndifficult task for many federated systems, when it comes to account migration. polyprotos' approach\nto how data is distributed and stored, and how identities are managed, makes it possible to have a\nvery smooth and secure account migration process."}),"\n",(0,i.jsx)(t.h2,{id:"the-problem",children:"The problem"}),"\n",(0,i.jsx)(t.p,{children:"Using Mastodon as an example; When a user wants to move from one instance to another, they have to\ncreate a new account on the new instance, and follow all the people they were following on the old\naccount. All the toots and other data from the old account are left behind, and you do not have a\nway of porting them over to the new account. This is a problem that has been around for a long time,\nand it is not just a problem with Mastodon, but with many other federated systems as well."}),"\n",(0,i.jsx)(t.h2,{id:"how-polyproto-works-briefly",children:"How polyproto works, briefly"}),"\n",(0,i.jsxs)(t.p,{children:["In polyproto, your federation ID, e.g. ",(0,i.jsx)(t.code,{children:"xenia@example.com"}),", is what identifies you. If you want to\nuse this identity on a client, your client will generate a key pair for a certificate signing\nrequest, and send this request to your home server. Given that you didn't provide any invalid data,\nyour home server will sign the certificate, and send it back to you."]}),"\n",(0,i.jsx)(t.p,{children:"Any data you send to anyone - be it a chat message, a social media post, or anything else - is\nsigned using your private key. This signature can be verified by anyone using your public key, which\nis part of the certificate you received from your home server. To check a certificates' validity,\nyou can ask the home server for its root certificate, and verify the signature on the certificate\nyou received."}),"\n",(0,i.jsx)(t.p,{children:"This means:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"All the data you send is cryptographically tied to your identity"}),"\n",(0,i.jsx)(t.li,{children:"Anyone can verify that the data was actually sent by you"}),"\n",(0,i.jsx)(t.li,{children:"Anyone can verify that the data was not tampered with by anyone else"}),"\n",(0,i.jsx)(t.li,{children:"Everybody can verify that you are who you say you are"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This is even true when you are sending data to a different server than your home server."}),"\n",(0,i.jsx)(t.h2,{id:"migrating-an-account-on-polyproto",children:"Migrating an account on polyproto"}),"\n",(0,i.jsx)(t.h3,{id:"low-data-centralization",children:"Low data centralization"}),"\n",(0,i.jsx)(t.p,{children:"Fundamentally, the process of migrating an account in polyproto relies mostly on changing data\nownership, rather than moving data around. This works best in scenarios where data is highly\ndistributed, and not stored in a central location."}),"\n",(0,i.jsx)(t.admonition,{title:"Example",type:"tip",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"This might be the case in a social chat messaging system\nsimilar to Discord, where messages are stored on the servers of the people hosting the chat rooms.\n"})})}),"\n",(0,i.jsx)(t.p,{children:"When you want to move your account from one server to another, you:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"First, create a new account on the new server"}),"\n",(0,i.jsx)(t.li,{children:"Then, you configure the new account to back-reference the old account"}),"\n",(0,i.jsx)(t.li,{children:"Next, if you are able to, you tell your old home server about the move"}),"\n",(0,i.jsx)(t.li,{children:"Last but not least, you verify to the servers storing your data that you are the same person as\nthe one who created the old account. The servers then update the data ownership to your new\naccount. This is done by using your old private key(s), in a way that does not reveal your\nprivate key(s) to anyone else."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"If applicable, your friends and followers will also be notified about the move, keeping existing\nrelationships intact."}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"This entire process does not rely on the old server being online.\nThis means that the process can be completed even if the old server is down, or if the old server\nis not cooperating with the user.\n\nHowever, including the homeserver in the process adds to the\ngeneral user experience. If you, for example, have included your federation ID as part of another,\nnon-polyproto social media profile, the old server can automatically refer people to the new account.\n"})})}),"\n",(0,i.jsx)(t.h3,{id:"moving-data",children:"Moving data"}),"\n",(0,i.jsx)(t.p,{children:"Should data actually need to be moved, for example when the old server is going to be shut down, or\nif the centralization of data is higher, the migration process is extended by a few steps:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Using the old account, your client requests a data export from your old home server."}),"\n",(0,i.jsx)(t.li,{children:"The old home server sends you a data export. Your client will check the signatures on the\nexported data, to make sure that the data was not tampered with."}),"\n",(0,i.jsx)(t.li,{children:"You then import the data into your new account on the new home server."}),"\n",(0,i.jsx)(t.li,{}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsxs)(t.p,{children:["polyproto's approach to account migration is very user-friendly, and does not require the user to do\nanything that is not already part of the normal usage of the system. The process is also very\nsecure, as it relies on the cryptographic properties of X.509 certificates, and also works across a\nhighly distributed data model, which, in my opinion, is how the internet ",(0,i.jsx)(t.em,{children:"should"})," be."]}),"\n",(0,i.jsx)(t.p,{children:"The biggest drawback to this approach is that there are a whole lot of web requests involved.\nDepending on the amount of data, this can take some minutes or possibly even hours."}),"\n",(0,i.jsxs)(t.p,{children:["It is also worth noting that all of this does not require any new or young technology. polyproto\nrelies on ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/X.509",children:"X.509 certificates"}),", which have been around for a\nlong time, and are widely used in many different applications. This means that the technology is\nwell understood, and that there are already many great tools in all sorts of programming languages\navailable to work with it. From my point of view, there is no need to reinvent the wheel."]}),"\n",(0,i.jsxs)(t.p,{children:["I hope that this article has given you a good understanding of how account migration works in\npolyproto. If you have any questions or feedback, feel free to reach out to me via E-Mail, where I\ncan be reached under ",(0,i.jsx)(t.code,{children:"flori@polyphony.chat"}),". OpenPGP is supported, and my public key can be found on\n",(0,i.jsx)(t.a,{href:"https://keys.openpgp.org/vks/v1/by-fingerprint/1AFF5E2D2145C795AB117C2ADCAE4B6877C6FC4E",children:"keys.openpgp.org (click to download pubkey)"})]})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},7558:e=>{e.exports=JSON.parse('{"permalink":"/blog/2024/02/07/account-migration","source":"@site/blog/2024-02-07-account-migration.md","title":"Account migration in polyproto","description":"Account migration is an important and difficult thing to get right in federated systems. In this","date":"2024-02-07T00:00:00.000Z","tags":[],"readingTime":5.17,"hasTruncateMarker":false,"authors":[{"name":"bitfl0wer","description":"Lead silly individual","avatar":"https://avatars.githubusercontent.com/u/39242991?v=4","key":"bitfl0wer","page":null}],"frontMatter":{"draft":false,"date":"2024-02-07T00:00:00.000Z","categories":["polyproto"],"authors":["bitfl0wer"],"title":"Account migration in polyproto"},"unlisted":false,"prevItem":{"title":"X.509 in polyproto","permalink":"/blog/2024/02/19/x509-in-polyproto"},"nextItem":{"title":"Porting chorus to WebAssembly + Client Update","permalink":"/blog/2023/11/23/webassembly-chorus"}}')},8453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>s});var n=o(6540);const i={},a=n.createContext(i);function r(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);